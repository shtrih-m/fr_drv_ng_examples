//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace ru.shtrih_m.fr_drv_ng.classic_interface {

public class classic_interface : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal classic_interface(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(classic_interface obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~classic_interface() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          classic_fr_drv_ngPINVOKE.delete_classic_interface(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public classic_interface() : this(classic_fr_drv_ngPINVOKE.new_classic_interface__SWIG_0(), true) {
  }

  public classic_interface(string name) : this(classic_fr_drv_ngPINVOKE.new_classic_interface__SWIG_1(name), true) {
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public int AddLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_AddLD(swigCPtr);
    return ret;
  }

  public int Beep() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Beep(swigCPtr);
    return ret;
  }

  public int Buy() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Buy(swigCPtr);
    return ret;
  }

  public int BuyEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_BuyEx(swigCPtr);
    return ret;
  }

  public int CancelCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CancelCheck(swigCPtr);
    return ret;
  }

  public int CashIncome() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashIncome(swigCPtr);
    return ret;
  }

  public int CashOutcome() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashOutcome(swigCPtr);
    return ret;
  }

  public int Charge() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Charge(swigCPtr);
    return ret;
  }

  public int CheckSubTotal() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckSubTotal(swigCPtr);
    return ret;
  }

  public int CloseCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseCheck(swigCPtr);
    return ret;
  }

  public int ConfirmDate() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ConfirmDate(swigCPtr);
    return ret;
  }

  public int Connect() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Connect(swigCPtr);
    return ret;
  }

  public int ContinuePrint() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ContinuePrint(swigCPtr);
    return ret;
  }

  public int Correction() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Correction(swigCPtr);
    return ret;
  }

  public int CutCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CutCheck(swigCPtr);
    return ret;
  }

  public int DampRequest() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DampRequest(swigCPtr);
    return ret;
  }

  public int DeleteLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DeleteLD(swigCPtr);
    return ret;
  }

  public int Disconnect() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Disconnect(swigCPtr);
    return ret;
  }

  public int Discount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Discount(swigCPtr);
    return ret;
  }

  public int DozeOilCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DozeOilCheck(swigCPtr);
    return ret;
  }

  public int Draw() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Draw(swigCPtr);
    return ret;
  }

  public int EKLZDepartmentReportInDatesRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZDepartmentReportInDatesRange(swigCPtr);
    return ret;
  }

  public int EKLZDepartmentReportInSessionsRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZDepartmentReportInSessionsRange(swigCPtr);
    return ret;
  }

  public int EKLZJournalOnSessionNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZJournalOnSessionNumber(swigCPtr);
    return ret;
  }

  public int EKLZSessionReportInDatesRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZSessionReportInDatesRange(swigCPtr);
    return ret;
  }

  public int EKLZSessionReportInSessionsRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZSessionReportInSessionsRange(swigCPtr);
    return ret;
  }

  public int ExchangeBytes() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ExchangeBytes(swigCPtr);
    return ret;
  }

  public int FeedDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FeedDocument(swigCPtr);
    return ret;
  }

  public int Fiscalization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Fiscalization(swigCPtr);
    return ret;
  }

  public int FiscalReportForDatesRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FiscalReportForDatesRange(swigCPtr);
    return ret;
  }

  public int FiscalReportForSessionRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FiscalReportForSessionRange(swigCPtr);
    return ret;
  }

  public int GetActiveLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetActiveLD(swigCPtr);
    return ret;
  }

  public int EnumLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EnumLD(swigCPtr);
    return ret;
  }

  public int GetCashReg() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCashReg(swigCPtr);
    return ret;
  }

  public int GetCountLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCountLD(swigCPtr);
    return ret;
  }

  public int GetData() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetData(swigCPtr);
    return ret;
  }

  public int GetDeviceMetrics() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetDeviceMetrics(swigCPtr);
    return ret;
  }

  public int GetECRStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetECRStatus(swigCPtr);
    return ret;
  }

  public int GetShortECRStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetShortECRStatus(swigCPtr);
    return ret;
  }

  public int GetExchangeParam() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetExchangeParam(swigCPtr);
    return ret;
  }

  public int GetFieldStruct() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetFieldStruct(swigCPtr);
    return ret;
  }

  public int GetFiscalizationParameters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetFiscalizationParameters(swigCPtr);
    return ret;
  }

  public int GetFMRecordsSum() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetFMRecordsSum(swigCPtr);
    return ret;
  }

  public int GetLastFMRecordDate() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetLastFMRecordDate(swigCPtr);
    return ret;
  }

  public int GetLiterSumCounter() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetLiterSumCounter(swigCPtr);
    return ret;
  }

  public int GetOperationReg() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetOperationReg(swigCPtr);
    return ret;
  }

  public int GetParamLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetParamLD(swigCPtr);
    return ret;
  }

  public int GetRangeDatesAndSessions() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetRangeDatesAndSessions(swigCPtr);
    return ret;
  }

  public int GetRKStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetRKStatus(swigCPtr);
    return ret;
  }

  public int GetTableStruct() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetTableStruct(swigCPtr);
    return ret;
  }

  public int InitFM() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InitFM(swigCPtr);
    return ret;
  }

  public int InitTable() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InitTable(swigCPtr);
    return ret;
  }

  public int InterruptDataStream() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InterruptDataStream(swigCPtr);
    return ret;
  }

  public int InterruptFullReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InterruptFullReport(swigCPtr);
    return ret;
  }

  public int InterruptTest() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InterruptTest(swigCPtr);
    return ret;
  }

  public int LaunchRK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LaunchRK(swigCPtr);
    return ret;
  }

  public int LoadLineData() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadLineData(swigCPtr);
    return ret;
  }

  public int OilSale() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OilSale(swigCPtr);
    return ret;
  }

  public int OpenCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenCheck(swigCPtr);
    return ret;
  }

  public int OpenDrawer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenDrawer(swigCPtr);
    return ret;
  }

  public int PrintBarCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBarCode(swigCPtr);
    return ret;
  }

  public int PrintDepartmentReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintDepartmentReport(swigCPtr);
    return ret;
  }

  public int PrintDocumentTitle() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintDocumentTitle(swigCPtr);
    return ret;
  }

  public int PrintOperationReg() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintOperationReg(swigCPtr);
    return ret;
  }

  public int PrintReportWithCleaning() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintReportWithCleaning(swigCPtr);
    return ret;
  }

  public int PrintReportWithoutCleaning() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintReportWithoutCleaning(swigCPtr);
    return ret;
  }

  public int PrintString() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintString(swigCPtr);
    return ret;
  }

  public int PrintWideString() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintWideString(swigCPtr);
    return ret;
  }

  public int ReadEKLZDocumentOnKPK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadEKLZDocumentOnKPK(swigCPtr);
    return ret;
  }

  public int ReadEKLZSessionTotal() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadEKLZSessionTotal(swigCPtr);
    return ret;
  }

  public int ReadLicense() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadLicense(swigCPtr);
    return ret;
  }

  public int ReadTable() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadTable(swigCPtr);
    return ret;
  }

  public int RepeatDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_RepeatDocument(swigCPtr);
    return ret;
  }

  public int ResetAllTRK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResetAllTRK(swigCPtr);
    return ret;
  }

  public int ResetRK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResetRK(swigCPtr);
    return ret;
  }

  public int ResetSettings() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResetSettings(swigCPtr);
    return ret;
  }

  public int ResetSummary() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResetSummary(swigCPtr);
    return ret;
  }

  public int ReturnBuy() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReturnBuy(swigCPtr);
    return ret;
  }

  public int ReturnBuyEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReturnBuyEx(swigCPtr);
    return ret;
  }

  public int ReturnSale() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReturnSale(swigCPtr);
    return ret;
  }

  public int ReturnSaleEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReturnSaleEx(swigCPtr);
    return ret;
  }

  public int Sale() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Sale(swigCPtr);
    return ret;
  }

  public int SaleEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SaleEx(swigCPtr);
    return ret;
  }

  public int SetActiveLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetActiveLD(swigCPtr);
    return ret;
  }

  public int SetDate() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetDate(swigCPtr);
    return ret;
  }

  public int SetDozeInMilliliters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetDozeInMilliliters(swigCPtr);
    return ret;
  }

  public int SetDozeInMoney() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetDozeInMoney(swigCPtr);
    return ret;
  }

  public int SetExchangeParam() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetExchangeParam(swigCPtr);
    return ret;
  }

  public int SetParamLD() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetParamLD(swigCPtr);
    return ret;
  }

  public int SetPointPosition() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetPointPosition(swigCPtr);
    return ret;
  }

  public int SetRKParameters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetRKParameters(swigCPtr);
    return ret;
  }

  public int SetSerialNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetSerialNumber(swigCPtr);
    return ret;
  }

  public int SetTime() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetTime(swigCPtr);
    return ret;
  }

  public int ShowProperties() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowProperties(swigCPtr);
    return ret;
  }

  public int StopEKLZDocumentPrinting() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StopEKLZDocumentPrinting(swigCPtr);
    return ret;
  }

  public int StopRK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StopRK(swigCPtr);
    return ret;
  }

  public int Storno() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Storno(swigCPtr);
    return ret;
  }

  public int StornoEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StornoEx(swigCPtr);
    return ret;
  }

  public int StornoCharge() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StornoCharge(swigCPtr);
    return ret;
  }

  public int StornoDiscount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StornoDiscount(swigCPtr);
    return ret;
  }

  public int SummOilCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SummOilCheck(swigCPtr);
    return ret;
  }

  public int SysAdminCancelCheck() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SysAdminCancelCheck(swigCPtr);
    return ret;
  }

  public int Test() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Test(swigCPtr);
    return ret;
  }

  public int WriteLicense() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WriteLicense(swigCPtr);
    return ret;
  }

  public int WriteTable() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WriteTable(swigCPtr);
    return ret;
  }

  public int PrintStringWithFont() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintStringWithFont(swigCPtr);
    return ret;
  }

  public bool Get_BatteryCondition() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_BatteryCondition(swigCPtr);
    return ret;
  }

  public long Get_CheckResult() {
    long ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CheckResult(swigCPtr);
    return ret;
  }

  public void Set_CheckResult(long value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CheckResult(swigCPtr, value);
  }

  public int Get_CurrentDozeInMilliliters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CurrentDozeInMilliliters(swigCPtr);
    return ret;
  }

  public void Set_CurrentDozeInMilliliters(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CurrentDozeInMilliliters(swigCPtr, value);
  }

  public long Get_CurrentDozeInMoney() {
    long ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CurrentDozeInMoney(swigCPtr);
    return ret;
  }

  public void Set_CurrentDozeInMoney(long value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CurrentDozeInMoney(swigCPtr, value);
  }

  public int Get_DozeInMilliliters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_DozeInMilliliters(swigCPtr);
    return ret;
  }

  public void Set_DozeInMilliliters(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_DozeInMilliliters(swigCPtr, value);
  }

  public long Get_DozeInMoney() {
    long ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_DozeInMoney(swigCPtr);
    return ret;
  }

  public void Set_DozeInMoney(long value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_DozeInMoney(swigCPtr, value);
  }

  public int Get_EmergencyStopCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_EmergencyStopCode(swigCPtr);
    return ret;
  }

  public string Get_EmergencyStopCodeDescription() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_EmergencyStopCodeDescription(swigCPtr);
    return ret;
  }

  public bool Get_IsCheckClosed() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_IsCheckClosed(swigCPtr);
    return ret;
  }

  public bool Get_IsCheckMadeOut() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_IsCheckMadeOut(swigCPtr);
    return ret;
  }

  public bool Get_Motor() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Motor(swigCPtr);
    return ret;
  }

  public bool Get_Pistol() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Pistol(swigCPtr);
    return ret;
  }

  public int Get_RKNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_RKNumber(swigCPtr);
    return ret;
  }

  public void Set_RKNumber(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_RKNumber(swigCPtr, value);
  }

  public bool Get_RoughValve() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_RoughValve(swigCPtr);
    return ret;
  }

  public int Get_SlowingInMilliliters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_SlowingInMilliliters(swigCPtr);
    return ret;
  }

  public void Set_SlowingInMilliliters(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_SlowingInMilliliters(swigCPtr, value);
  }

  public bool Get_SlowingValve() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_SlowingValve(swigCPtr);
    return ret;
  }

  public int Get_StatusRK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_StatusRK(swigCPtr);
    return ret;
  }

  public string Get_StatusRKDescription() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_StatusRKDescription(swigCPtr);
    return ret;
  }

  public int Get_TRKNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TRKNumber(swigCPtr);
    return ret;
  }

  public void Set_TRKNumber(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TRKNumber(swigCPtr, value);
  }

  public int Get_WaitPrintingTime() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_WaitPrintingTime(swigCPtr);
    return ret;
  }

  public int EKLZActivizationResult() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZActivizationResult(swigCPtr);
    return ret;
  }

  public int EKLZActivization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZActivization(swigCPtr);
    return ret;
  }

  public int CloseEKLZArchive() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseEKLZArchive(swigCPtr);
    return ret;
  }

  public int GetEKLZSerialNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZSerialNumber(swigCPtr);
    return ret;
  }

  public int EKLZInterrupt() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZInterrupt(swigCPtr);
    return ret;
  }

  public int GetEKLZCode1Report() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZCode1Report(swigCPtr);
    return ret;
  }

  public int GetEKLZCode2Report() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZCode2Report(swigCPtr);
    return ret;
  }

  public int TestEKLZArchiveIntegrity() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_TestEKLZArchiveIntegrity(swigCPtr);
    return ret;
  }

  public int Get_TestNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TestNumber(swigCPtr);
    return ret;
  }

  public void Set_TestNumber(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TestNumber(swigCPtr, value);
  }

  public int GetEKLZVersion() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZVersion(swigCPtr);
    return ret;
  }

  public int InitEKLZArchive() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InitEKLZArchive(swigCPtr);
    return ret;
  }

  public int GetEKLZData() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZData(swigCPtr);
    return ret;
  }

  public int GetEKLZJournal() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZJournal(swigCPtr);
    return ret;
  }

  public int GetEKLZDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZDocument(swigCPtr);
    return ret;
  }

  public int GetEKLZDepartmentReportInDatesRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZDepartmentReportInDatesRange(swigCPtr);
    return ret;
  }

  public int GetEKLZDepartmentReportInSessionsRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZDepartmentReportInSessionsRange(swigCPtr);
    return ret;
  }

  public int GetEKLZSessionReportInDatesRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZSessionReportInDatesRange(swigCPtr);
    return ret;
  }

  public int GetEKLZSessionReportInSessionsRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZSessionReportInSessionsRange(swigCPtr);
    return ret;
  }

  public int GetEKLZSessionTotal() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZSessionTotal(swigCPtr);
    return ret;
  }

  public int GetEKLZActivizationResult() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZActivizationResult(swigCPtr);
    return ret;
  }

  public int SetEKLZResultCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetEKLZResultCode(swigCPtr);
    return ret;
  }

  public void Set_EKLZResultCode(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_EKLZResultCode(swigCPtr, value);
  }

  public int OpenFiscalSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenFiscalSlipDocument(swigCPtr);
    return ret;
  }

  public int OpenStandardFiscalSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenStandardFiscalSlipDocument(swigCPtr);
    return ret;
  }

  public int RegistrationOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_RegistrationOnSlipDocument(swigCPtr);
    return ret;
  }

  public int StandardRegistrationOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StandardRegistrationOnSlipDocument(swigCPtr);
    return ret;
  }

  public int ChargeOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChargeOnSlipDocument(swigCPtr);
    return ret;
  }

  public int StandardChargeOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StandardChargeOnSlipDocument(swigCPtr);
    return ret;
  }

  public int CloseCheckOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseCheckOnSlipDocument(swigCPtr);
    return ret;
  }

  public int StandardCloseCheckOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StandardCloseCheckOnSlipDocument(swigCPtr);
    return ret;
  }

  public int ConfigureSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ConfigureSlipDocument(swigCPtr);
    return ret;
  }

  public int ConfigureStandardSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ConfigureStandardSlipDocument(swigCPtr);
    return ret;
  }

  public int FillSlipDocumentWithUnfiscalInfo() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FillSlipDocumentWithUnfiscalInfo(swigCPtr);
    return ret;
  }

  public int ClearSlipDocumentBufferString() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClearSlipDocumentBufferString(swigCPtr);
    return ret;
  }

  public int ClearSlipDocumentBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClearSlipDocumentBuffer(swigCPtr);
    return ret;
  }

  public int PrintSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintSlipDocument(swigCPtr);
    return ret;
  }

  public int DiscountOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnSlipDocument(swigCPtr);
    return ret;
  }

  public int StandardDiscountOnSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_StandardDiscountOnSlipDocument(swigCPtr);
    return ret;
  }

  public int EjectSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EjectSlipDocument(swigCPtr);
    return ret;
  }

  public int LoadLineDataEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadLineDataEx(swigCPtr);
    return ret;
  }

  public int DrawEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DrawEx(swigCPtr);
    return ret;
  }

  public int ConfigureGeneralSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ConfigureGeneralSlipDocument(swigCPtr);
    return ret;
  }

  public int Get_Tax1TurnOverFont() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Tax1TurnOverFont(swigCPtr);
    return ret;
  }

  public void Set_Tax1TurnOverFont(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Tax1TurnOverFont(swigCPtr, value);
  }

  public int Get_Tax2TurnOverFont() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Tax2TurnOverFont(swigCPtr);
    return ret;
  }

  public void Set_Tax2TurnOverFont(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Tax2TurnOverFont(swigCPtr, value);
  }

  public int Get_Tax3TurnOverFont() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Tax3TurnOverFont(swigCPtr);
    return ret;
  }

  public void Set_Tax3TurnOverFont(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Tax3TurnOverFont(swigCPtr, value);
  }

  public int Get_Tax4TurnOverFont() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Tax4TurnOverFont(swigCPtr);
    return ret;
  }

  public void Set_Tax4TurnOverFont(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Tax4TurnOverFont(swigCPtr, value);
  }

  public int Get_Tax1TurnOverSymbolNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Tax1TurnOverSymbolNumber(swigCPtr);
    return ret;
  }

  public void Set_Tax1TurnOverSymbolNumber(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Tax1TurnOverSymbolNumber(swigCPtr, value);
  }

  public int WideLoadLineData() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WideLoadLineData(swigCPtr);
    return ret;
  }

  public int PrintTaxReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintTaxReport(swigCPtr);
    return ret;
  }

  public uint Get_FileVersionMS() {
    uint ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_FileVersionMS(swigCPtr);
    return ret;
  }

  public uint Get_FileVersionLS() {
    uint ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_FileVersionLS(swigCPtr);
    return ret;
  }

  public int GetLongSerialNumberAndLongRNM() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetLongSerialNumberAndLongRNM(swigCPtr);
    return ret;
  }

  public int SetLongSerialNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetLongSerialNumber(swigCPtr);
    return ret;
  }

  public int FiscalizationWithLongRNM() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FiscalizationWithLongRNM(swigCPtr);
    return ret;
  }

  public int Connect2() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Connect2(swigCPtr);
    return ret;
  }

  public int GetECRPrinterStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetECRPrinterStatus(swigCPtr);
    return ret;
  }

  public int Get_PrinterStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_PrinterStatus(swigCPtr);
    return ret;
  }

  public int ServerConnect() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ServerConnect(swigCPtr);
    return ret;
  }

  public int ServerDisconnect() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ServerDisconnect(swigCPtr);
    return ret;
  }

  public int LockPort() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LockPort(swigCPtr);
    return ret;
  }

  public int UnlockPort() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_UnlockPort(swigCPtr);
    return ret;
  }

  public int AdminUnlockPort() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_AdminUnlockPort(swigCPtr);
    return ret;
  }

  public int AdminUnlockPorts() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_AdminUnlockPorts(swigCPtr);
    return ret;
  }

  public int ServerCheckKey() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ServerCheckKey(swigCPtr);
    return ret;
  }

  public int GetFontMetrics() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetFontMetrics(swigCPtr);
    return ret;
  }

  public int GetFreeLDNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetFreeLDNumber(swigCPtr);
    return ret;
  }

  public int ReadTable2() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadTable2(swigCPtr);
    return ret;
  }

  public int WriteTable2() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WriteTable2(swigCPtr);
    return ret;
  }

  public void SetFieldMinValue(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_SetFieldMinValue(swigCPtr, value);
  }

  public void SetFieldMaxValue(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_SetFieldMaxValue(swigCPtr, value);
  }

  public bool Get_CPLog() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CPLog(swigCPtr);
    return ret;
  }

  public void Set_CPLog(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CPLog(swigCPtr, value);
  }

  public int CashControlOpen() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlOpen(swigCPtr);
    return ret;
  }

  public int CashControlClose() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlClose(swigCPtr);
    return ret;
  }

  public int SaveParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SaveParams(swigCPtr);
    return ret;
  }

  public string Get_CPLogFile() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CPLogFile(swigCPtr);
    return ret;
  }

  public void Set_CPLogFile(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CPLogFile(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public string Get_ComLogFile() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ComLogFile(swigCPtr);
    return ret;
  }

  public void Set_ComLogFile(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ComLogFile(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool Get_RecoverError165() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_RecoverError165(swigCPtr);
    return ret;
  }

  public void Set_RecoverError165(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_RecoverError165(swigCPtr, value);
  }

  public int Get_MaxRecoverCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_MaxRecoverCount(swigCPtr);
    return ret;
  }

  public void Set_MaxRecoverCount(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_MaxRecoverCount(swigCPtr, value);
  }

  public int GetEKLZCode1Status() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZCode1Status(swigCPtr);
    return ret;
  }

  public int GetEKLZCode2Status() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZCode2Status(swigCPtr);
    return ret;
  }

  public int ReadWriteFM() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadWriteFM(swigCPtr);
    return ret;
  }

  public int PrintHeader() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintHeader(swigCPtr);
    return ret;
  }

  public int CloseCheckWithResult() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseCheckWithResult(swigCPtr);
    return ret;
  }

  public int Get_OperationCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OperationCode(swigCPtr);
    return ret;
  }

  public int Get_AccType() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_AccType(swigCPtr);
    return ret;
  }

  public void Set_AccType(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_AccType(swigCPtr, value);
  }

  public int Get_Address() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Address(swigCPtr);
    return ret;
  }

  public void Set_Address(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Address(swigCPtr, value);
  }

  public int Get_WrittenByte() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_WrittenByte(swigCPtr);
    return ret;
  }

  public void Set_WrittenByte(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_WrittenByte(swigCPtr, value);
  }

  public int Get_ReadByte() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ReadByte(swigCPtr);
    return ret;
  }

  public string Get_TransferByte() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TransferByte(swigCPtr);
    return ret;
  }

  public void Set_TransferByte(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TransferByte(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public int AboutBox() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_AboutBox(swigCPtr);
    return ret;
  }

  public int PresenterKeep() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PresenterKeep(swigCPtr);
    return ret;
  }

  public int PresenterPush() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PresenterPush(swigCPtr);
    return ret;
  }

  public int OpenScreen() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenScreen(swigCPtr);
    return ret;
  }

  public int CloseScreen() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseScreen(swigCPtr);
    return ret;
  }

  public bool Get_ComLogOnlyErrors() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ComLogOnlyErrors(swigCPtr);
    return ret;
  }

  public void Set_ComLogOnlyErrors(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ComLogOnlyErrors(swigCPtr, value);
  }

  public int SetSCPassword() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetSCPassword(swigCPtr);
    return ret;
  }

  public bool MethodSupported() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_MethodSupported(swigCPtr);
    return ret;
  }

  public bool PropertySupported() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_PropertySupported(swigCPtr);
    return ret;
  }

  public int LockPortTimeout() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LockPortTimeout(swigCPtr);
    return ret;
  }

  public int GetIBMStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetIBMStatus(swigCPtr);
    return ret;
  }

  public int GetShortIBMStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetShortIBMStatus(swigCPtr);
    return ret;
  }

  public int GetCommandParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCommandParams(swigCPtr);
    return ret;
  }

  public int SetCommandParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetCommandParams(swigCPtr);
    return ret;
  }

  public int SaveCommandParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SaveCommandParams(swigCPtr);
    return ret;
  }

  public int SetAllCommandsParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetAllCommandsParams(swigCPtr);
    return ret;
  }

  public int SetDefCommandsParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetDefCommandsParams(swigCPtr);
    return ret;
  }

  public int OpenSession() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenSession(swigCPtr);
    return ret;
  }

  public int WaitForPrinting() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WaitForPrinting(swigCPtr);
    return ret;
  }

  public int GetInterval() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetInterval(swigCPtr);
    return ret;
  }

  public int SetInterval() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetInterval(swigCPtr);
    return ret;
  }

  public int ShowTablesDlg() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowTablesDlg(swigCPtr);
    return ret;
  }

  public int Get_ParamsPageIndex() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ParamsPageIndex(swigCPtr);
    return ret;
  }

  public void Set_ParamsPageIndex(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ParamsPageIndex(swigCPtr, value);
  }

  public int ShowPayParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowPayParams(swigCPtr);
    return ret;
  }

  public int ReprintSlipDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReprintSlipDocument(swigCPtr);
    return ret;
  }

  public int CardPayProperties() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CardPayProperties(swigCPtr);
    return ret;
  }

  public bool Get_CardPayEnabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CardPayEnabled(swigCPtr);
    return ret;
  }

  public void Set_CardPayEnabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CardPayEnabled(swigCPtr, value);
  }

  public int Get_CardPayType() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CardPayType(swigCPtr);
    return ret;
  }

  public void Set_CardPayType(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_CardPayType(swigCPtr, value);
  }

  public bool Get_LogCommands() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_LogCommands(swigCPtr);
    return ret;
  }

  public void Set_LogCommands(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_LogCommands(swigCPtr, value);
  }

  public bool Get_LogMethods() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_LogMethods(swigCPtr);
    return ret;
  }

  public void Set_LogMethods(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_LogMethods(swigCPtr, value);
  }

  public int PrintLine() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintLine(swigCPtr);
    return ret;
  }

  public int JournalClear() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalClear(swigCPtr);
    return ret;
  }

  public int JournalGetRow() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalGetRow(swigCPtr);
    return ret;
  }

  public int JournalInit() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalInit(swigCPtr);
    return ret;
  }

  public int FindDevice() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FindDevice(swigCPtr);
    return ret;
  }

  public int LoadParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadParams(swigCPtr);
    return ret;
  }

  public int FinishDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FinishDocument(swigCPtr);
    return ret;
  }

  public int PrintTrailer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintTrailer(swigCPtr);
    return ret;
  }

  public int WaitForCheckClose() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WaitForCheckClose(swigCPtr);
    return ret;
  }

  public int GetSummFactor() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetSummFactor(swigCPtr);
    return ret;
  }

  public int GetQuantityFactor() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetQuantityFactor(swigCPtr);
    return ret;
  }

  public int ReadDeviceMetrics() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadDeviceMetrics(swigCPtr);
    return ret;
  }

  public int ReadEcrStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadEcrStatus(swigCPtr);
    return ret;
  }

  public int SaveState() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SaveState(swigCPtr);
    return ret;
  }

  public int RestoreState() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_RestoreState(swigCPtr);
    return ret;
  }

  public bool Get_HasCashControlLicense() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_HasCashControlLicense(swigCPtr);
    return ret;
  }

  public int LoadImage() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadImage(swigCPtr);
    return ret;
  }

  public int GetCashAcceptorStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCashAcceptorStatus(swigCPtr);
    return ret;
  }

  public int GetCashAcceptorRegisters() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCashAcceptorRegisters(swigCPtr);
    return ret;
  }

  public int CashAcceptorReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashAcceptorReport(swigCPtr);
    return ret;
  }

  public int ClearResult() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClearResult(swigCPtr);
    return ret;
  }

  public int MasterPayClearBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MasterPayClearBuffer(swigCPtr);
    return ret;
  }

  public int MasterPayAddTextBlock() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MasterPayAddTextBlock(swigCPtr);
    return ret;
  }

  public int MasterPayCreateMac() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MasterPayCreateMac(swigCPtr);
    return ret;
  }

  public int LoadBlockData() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadBlockData(swigCPtr);
    return ret;
  }

  public int GetEKLZCode3Report() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetEKLZCode3Report(swigCPtr);
    return ret;
  }

  public int ReadModemParameter() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadModemParameter(swigCPtr);
    return ret;
  }

  public int WriteModemParameter() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WriteModemParameter(swigCPtr);
    return ret;
  }

  public int Get_ParameterNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ParameterNumber(swigCPtr);
    return ret;
  }

  public void Set_ParameterNumber(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ParameterNumber(swigCPtr, value);
  }

  public int GetPortNames() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetPortNames(swigCPtr);
    return ret;
  }

  public int OutputReceipt() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OutputReceipt(swigCPtr);
    return ret;
  }

  public int Sale2() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Sale2(swigCPtr);
    return ret;
  }

  public int PrintCliche() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintCliche(swigCPtr);
    return ret;
  }

  public int PrintBarcodeLine() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBarcodeLine(swigCPtr);
    return ret;
  }

  public int PrintBarcodeGraph() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBarcodeGraph(swigCPtr);
    return ret;
  }

  public string Get_BarcodeTypes() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_BarcodeTypes(swigCPtr);
    return ret;
  }

  public string Get_BarcodeAlignments() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_BarcodeAlignments(swigCPtr);
    return ret;
  }

  public int ResetECR() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResetECR(swigCPtr);
    return ret;
  }

  public int PrintZReportFromBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintZReportFromBuffer(swigCPtr);
    return ret;
  }

  public int PrintZReportInBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintZReportInBuffer(swigCPtr);
    return ret;
  }

  public int Get_LogFileMaxSize() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_LogFileMaxSize(swigCPtr);
    return ret;
  }

  public void Set_LogFileMaxSize(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_LogFileMaxSize(swigCPtr, value);
  }

  public int ClearPrintBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClearPrintBuffer(swigCPtr);
    return ret;
  }

  public int ReadPrintBufferLine() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadPrintBufferLine(swigCPtr);
    return ret;
  }

  public int Get_PrintBufferLineNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_PrintBufferLineNumber(swigCPtr);
    return ret;
  }

  public int Get_NakCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_NakCount(swigCPtr);
    return ret;
  }

  public void Set_NakCount(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_NakCount(swigCPtr, value);
  }

  public int Get_MaxAnswerReadCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_MaxAnswerReadCount(swigCPtr);
    return ret;
  }

  public int Get_MaxCommandSendCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_MaxCommandSendCount(swigCPtr);
    return ret;
  }

  public int Get_MaxENQSendCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_MaxENQSendCount(swigCPtr);
    return ret;
  }

  public void Set_MaxAnswerReadCount(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_MaxAnswerReadCount(swigCPtr, value);
  }

  public void Set_MaxCommandSendCount(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_MaxCommandSendCount(swigCPtr, value);
  }

  public void Set_MaxENQSendCount(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_MaxENQSendCount(swigCPtr, value);
  }

  public int OpenNonfiscalDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenNonfiscalDocument(swigCPtr);
    return ret;
  }

  public int CloseNonFiscalDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseNonFiscalDocument(swigCPtr);
    return ret;
  }

  public int PrintAttribute() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintAttribute(swigCPtr);
    return ret;
  }

  public int Get_ModelParamValue() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ModelParamValue(swigCPtr);
    return ret;
  }

  public int LoadCashControlParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadCashControlParams(swigCPtr);
    return ret;
  }

  public uint Get_EnteredTaxPassword() {
    uint ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_EnteredTaxPassword(swigCPtr);
    return ret;
  }

  public void Set_BanknoteType(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_BanknoteType(swigCPtr, value);
  }

  public int ReadBanknoteCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadBanknoteCount(swigCPtr);
    return ret;
  }

  public int PrintOperationalTaxReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintOperationalTaxReport(swigCPtr);
    return ret;
  }

  public bool Get_CapOpenCheck() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_CapOpenCheck(swigCPtr);
    return ret;
  }

  public string Get_PollDescription() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_PollDescription(swigCPtr);
    return ret;
  }

  public int WaitConnection() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WaitConnection(swigCPtr);
    return ret;
  }

  public int ReadModelParamDescription() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadModelParamDescription(swigCPtr);
    return ret;
  }

  public int PrintBarcodeUsingPrinter() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBarcodeUsingPrinter(swigCPtr);
    return ret;
  }

  public int CloseCheckWithKPK() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseCheckWithKPK(swigCPtr);
    return ret;
  }

  public int ReadEKLZActivizationParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadEKLZActivizationParams(swigCPtr);
    return ret;
  }

  public int GetShortReportInDatesRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetShortReportInDatesRange(swigCPtr);
    return ret;
  }

  public int GetShortReportInSessionRange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetShortReportInSessionRange(swigCPtr);
    return ret;
  }

  public int ReadLastReceipt() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadLastReceipt(swigCPtr);
    return ret;
  }

  public int ReadLastReceiptLine() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadLastReceiptLine(swigCPtr);
    return ret;
  }

  public int ReadLastReceiptMac() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadLastReceiptMac(swigCPtr);
    return ret;
  }

  public int BeginDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_BeginDocument(swigCPtr);
    return ret;
  }

  public int EndDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_EndDocument(swigCPtr);
    return ret;
  }

  public int Print2DBarcode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Print2DBarcode(swigCPtr);
    return ret;
  }

  public int LoadAndPrint2DBarcode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadAndPrint2DBarcode(swigCPtr);
    return ret;
  }

  public int ExcisableOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ExcisableOperation(swigCPtr);
    return ret;
  }

  public int ReadReportBufferLine() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadReportBufferLine(swigCPtr);
    return ret;
  }

  public int ReadParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadParams(swigCPtr);
    return ret;
  }

  public int GetCashRegEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCashRegEx(swigCPtr);
    return ret;
  }

  public int GetWareBaseCashRegs() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetWareBaseCashRegs(swigCPtr);
    return ret;
  }

  public int PrintCashierReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintCashierReport(swigCPtr);
    return ret;
  }

  public int PrintHourlyReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintHourlyReport(swigCPtr);
    return ret;
  }

  public int PrintWareReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintWareReport(swigCPtr);
    return ret;
  }

  public int UpdateWare() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_UpdateWare(swigCPtr);
    return ret;
  }

  public int CheckFM() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckFM(swigCPtr);
    return ret;
  }

  public int RemoveWare() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_RemoveWare(swigCPtr);
    return ret;
  }

  public int ReadErrorDescription() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadErrorDescription(swigCPtr);
    return ret;
  }

  public int ReadLastErrorDescription() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadLastErrorDescription(swigCPtr);
    return ret;
  }

  public int ReadWare() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadWare(swigCPtr);
    return ret;
  }

  public int ReadModelParam() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadModelParam(swigCPtr);
    return ret;
  }

  public int InitEEPROM() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_InitEEPROM(swigCPtr);
    return ret;
  }

  public int CheckConnection() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckConnection(swigCPtr);
    return ret;
  }

  public int ChangeProtocol() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeProtocol(swigCPtr);
    return ret;
  }

  public int GetECRParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetECRParams(swigCPtr);
    return ret;
  }

  public int ShowImportDlg() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowImportDlg(swigCPtr);
    return ret;
  }

  public int JournalOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalOperation(swigCPtr);
    return ret;
  }

  public int MFPActivization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPActivization(swigCPtr);
    return ret;
  }

  public int MFPCloseArchive() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPCloseArchive(swigCPtr);
    return ret;
  }

  public int MFPGetPermitActivizationCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPGetPermitActivizationCode(swigCPtr);
    return ret;
  }

  public int MFPGetCustomerCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPGetCustomerCode(swigCPtr);
    return ret;
  }

  public int MFPPrepareActivization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPPrepareActivization(swigCPtr);
    return ret;
  }

  public int MFPSetCustomerCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPSetCustomerCode(swigCPtr);
    return ret;
  }

  public int MFPSetPermitActivizationCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPSetPermitActivizationCode(swigCPtr);
    return ret;
  }

  public int MFPGetPrepareActivizationResult() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPGetPrepareActivizationResult(swigCPtr);
    return ret;
  }

  public int CloseCheckEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseCheckEx(swigCPtr);
    return ret;
  }

  public int GetMFPCode3Status() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetMFPCode3Status(swigCPtr);
    return ret;
  }

  public int Get_ReadTimeout() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ReadTimeout(swigCPtr);
    return ret;
  }

  public void Set_ReadTimeout(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ReadTimeout(swigCPtr, value);
  }

  public int ClearReportBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClearReportBuffer(swigCPtr);
    return ret;
  }

  public int ShowAdditionalParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowAdditionalParams(swigCPtr);
    return ret;
  }

  public int GetCloudCashdeskParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetCloudCashdeskParams(swigCPtr);
    return ret;
  }

  public int DrawScale() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DrawScale(swigCPtr);
    return ret;
  }

  public int LoadGraphics512() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_LoadGraphics512(swigCPtr);
    return ret;
  }

  public int PrintGraphics512() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintGraphics512(swigCPtr);
    return ret;
  }

  public int Get_GraphBufferType() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_GraphBufferType(swigCPtr);
    return ret;
  }

  public void Set_GraphBufferType(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_GraphBufferType(swigCPtr, value);
  }

  public int Get_LineLength() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_LineLength(swigCPtr);
    return ret;
  }

  public void Set_LineLength(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_LineLength(swigCPtr, value);
  }

  public void Set_FNDocumentData(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_FNDocumentData(swigCPtr, value);
  }

  public void Set_FNLifeState(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_FNLifeState(swigCPtr, value);
  }

  public void Set_FNSessionState(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_FNSessionState(swigCPtr, value);
  }

  public void Set_FNSoftVersion(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_FNSoftVersion(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Set_FNWarningFlags(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_FNWarningFlags(swigCPtr, value);
  }

  public int FNGetExpirationTime() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetExpirationTime(swigCPtr);
    return ret;
  }

  public int FNGetSerial() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetSerial(swigCPtr);
    return ret;
  }

  public int FNGetStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetStatus(swigCPtr);
    return ret;
  }

  public int FNGetVersion() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetVersion(swigCPtr);
    return ret;
  }

  public int FNBeginFiscalization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginFiscalization(swigCPtr);
    return ret;
  }

  public int FNFiscalization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNFiscalization(swigCPtr);
    return ret;
  }

  public int Get_WorkMode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_WorkMode(swigCPtr);
    return ret;
  }

  public void Set_WorkMode(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_WorkMode(swigCPtr, value);
  }

  public int FNCancelDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCancelDocument(swigCPtr);
    return ret;
  }

  public int FNResetState() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNResetState(swigCPtr);
    return ret;
  }

  public int FNFindDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNFindDocument(swigCPtr);
    return ret;
  }

  public string Get_DocumentData() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_DocumentData(swigCPtr);
    return ret;
  }

  public void Set_DocumentData(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_DocumentData(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public int FNOpenSession() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNOpenSession(swigCPtr);
    return ret;
  }

  public int FNSendTLV() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendTLV(swigCPtr);
    return ret;
  }

  public int FNDiscountOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNDiscountOperation(swigCPtr);
    return ret;
  }

  public int FNStorno() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNStorno(swigCPtr);
    return ret;
  }

  public int OFDExchange() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OFDExchange(swigCPtr);
    return ret;
  }

  public int Get_OFDPort() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OFDPort(swigCPtr);
    return ret;
  }

  public void Set_OFDPort(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_OFDPort(swigCPtr, value);
  }

  public string Get_OFDServer() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OFDServer(swigCPtr);
    return ret;
  }

  public void Set_OFDServer(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_OFDServer(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public int Get_OFDPollPeriod() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OFDPollPeriod(swigCPtr);
    return ret;
  }

  public void Set_OFDPollPeriod(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_OFDPollPeriod(swigCPtr, value);
  }

  public bool Get_OFDEnabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OFDEnabled(swigCPtr);
    return ret;
  }

  public void Set_OFDEnabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_OFDEnabled(swigCPtr, value);
  }

  public int FNBeginCalculationStateReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginCalculationStateReport(swigCPtr);
    return ret;
  }

  public int FNBeginCloseFiscalMode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginCloseFiscalMode(swigCPtr);
    return ret;
  }

  public int FNBeginCloseSession() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginCloseSession(swigCPtr);
    return ret;
  }

  public int FNBeginCorrectionReceipt() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginCorrectionReceipt(swigCPtr);
    return ret;
  }

  public int FNBeginOpenSession() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginOpenSession(swigCPtr);
    return ret;
  }

  public int FNBeginRegistrationReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginRegistrationReport(swigCPtr);
    return ret;
  }

  public int FNBuildCalculationStateReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBuildCalculationStateReport(swigCPtr);
    return ret;
  }

  public int FNBuildCorrectionReceipt() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBuildCorrectionReceipt(swigCPtr);
    return ret;
  }

  public int FNBuildRegistrationReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBuildRegistrationReport(swigCPtr);
    return ret;
  }

  public int FNCloseFiscalMode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCloseFiscalMode(swigCPtr);
    return ret;
  }

  public int FNCloseSession() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCloseSession(swigCPtr);
    return ret;
  }

  public int FNGetCurrentSessionParams() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetCurrentSessionParams(swigCPtr);
    return ret;
  }

  public int FNGetInfoExchangeStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetInfoExchangeStatus(swigCPtr);
    return ret;
  }

  public int FNGetOFDTicketByDocNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetOFDTicketByDocNumber(swigCPtr);
    return ret;
  }

  public int FNGetUnconfirmedDocCount() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetUnconfirmedDocCount(swigCPtr);
    return ret;
  }

  public int FNReadFiscalDocumentTLV() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNReadFiscalDocumentTLV(swigCPtr);
    return ret;
  }

  public int FNRequestFiscalDocumentTLV() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNRequestFiscalDocumentTLV(swigCPtr);
    return ret;
  }

  public int FNBuildReregistrationReport() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBuildReregistrationReport(swigCPtr);
    return ret;
  }

  public int FNGetFiscalizationResult() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetFiscalizationResult(swigCPtr);
    return ret;
  }

  public int FNDiscountTaxOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNDiscountTaxOperation(swigCPtr);
    return ret;
  }

  public int FNCloseCheckEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCloseCheckEx(swigCPtr);
    return ret;
  }

  public long Get_TaxValue() {
    long ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValue(swigCPtr);
    return ret;
  }

  public void Set_TaxValue(long value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValue(swigCPtr, value);
  }

  public string Get_DiscountName() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_DiscountName(swigCPtr);
    return ret;
  }

  public void Set_DiscountName(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_DiscountName(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public int FNSendCustomerEmail() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendCustomerEmail(swigCPtr);
    return ret;
  }

  public int Annulment() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Annulment(swigCPtr);
    return ret;
  }

  public bool Get_AutoOpenSession() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_AutoOpenSession(swigCPtr);
    return ret;
  }

  public void Set_AutoOpenSession(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_AutoOpenSession(swigCPtr, value);
  }

  public int FNDiscountChargeRN() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNDiscountChargeRN(swigCPtr);
    return ret;
  }

  public int ExportTables() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ExportTables(swigCPtr);
    return ret;
  }

  public int ImportTables() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ImportTables(swigCPtr);
    return ret;
  }

  public int FNSendTag() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendTag(swigCPtr);
    return ret;
  }

  public int ReadSerialNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadSerialNumber(swigCPtr);
    return ret;
  }

  public int FNPrintOperatorConfirm() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNPrintOperatorConfirm(swigCPtr);
    return ret;
  }

  public int FNGetFiscalizationResultByNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetFiscalizationResultByNumber(swigCPtr);
    return ret;
  }

  public int AnnulmentRB() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_AnnulmentRB(swigCPtr);
    return ret;
  }

  public int FNGetTagDescription() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetTagDescription(swigCPtr);
    return ret;
  }

  public int FNPrintDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNPrintDocument(swigCPtr);
    return ret;
  }

  public int FNGetDocumentAsString() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetDocumentAsString(swigCPtr);
    return ret;
  }

  public int Ping() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Ping(swigCPtr);
    return ret;
  }

  public bool Get_ICSEnabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ICSEnabled(swigCPtr);
    return ret;
  }

  public int Get_ICSPollPeriod() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_ICSPollPeriod(swigCPtr);
    return ret;
  }

  public void Set_ICSEnabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ICSEnabled(swigCPtr, value);
  }

  public void Set_ICSPollPeriod(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_ICSPollPeriod(swigCPtr, value);
  }

  public int FNOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNOperation(swigCPtr);
    return ret;
  }

  public int FNSendTLVOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendTLVOperation(swigCPtr);
    return ret;
  }

  public bool Get_Summ1Enabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Summ1Enabled(swigCPtr);
    return ret;
  }

  public void Set_Summ1Enabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_Summ1Enabled(swigCPtr, value);
  }

  public bool Get_TaxValue2Enabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValue2Enabled(swigCPtr);
    return ret;
  }

  public bool Get_TaxValue3Enabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValue3Enabled(swigCPtr);
    return ret;
  }

  public bool Get_TaxValue4Enabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValue4Enabled(swigCPtr);
    return ret;
  }

  public bool Get_TaxValue5Enabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValue5Enabled(swigCPtr);
    return ret;
  }

  public bool Get_TaxValue6Enabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValue6Enabled(swigCPtr);
    return ret;
  }

  public bool Get_TaxValueEnabled() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_TaxValueEnabled(swigCPtr);
    return ret;
  }

  public void Set_TaxValueEnabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValueEnabled(swigCPtr, value);
  }

  public void Set_TaxValue2Enabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValue2Enabled(swigCPtr, value);
  }

  public void Set_TaxValue3Enabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValue3Enabled(swigCPtr, value);
  }

  public void Set_TaxValue4Enabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValue4Enabled(swigCPtr, value);
  }

  public void Set_TaxValue5Enabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValue5Enabled(swigCPtr, value);
  }

  public void Set_TaxValue6Enabled(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_TaxValue6Enabled(swigCPtr, value);
  }

  public int FNBuildCorrectionReceipt2() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBuildCorrectionReceipt2(swigCPtr);
    return ret;
  }

  public int Get_OFDReadTimeout() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OFDReadTimeout(swigCPtr);
    return ret;
  }

  public void Set_OFDReadTimeout(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_OFDReadTimeout(swigCPtr, value);
  }

  public int FNGetNonClearableSumm() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetNonClearableSumm(swigCPtr);
    return ret;
  }

  public bool Get_AutoEoD() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_AutoEoD(swigCPtr);
    return ret;
  }

  public void Set_AutoEoD(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_AutoEoD(swigCPtr, value);
  }

  public int ResetSerialNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResetSerialNumber(swigCPtr);
    return ret;
  }

  public int DBFindDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DBFindDocument(swigCPtr);
    return ret;
  }

  public int DBPrintDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DBPrintDocument(swigCPtr);
    return ret;
  }

  public int Get_KKTLicense() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_KKTLicense(swigCPtr);
    return ret;
  }

  public int Get_LicenseNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_LicenseNumber(swigCPtr);
    return ret;
  }

  public int Get_PUKCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_PUKCode(swigCPtr);
    return ret;
  }

  public int ReadKKTLicenses() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadKKTLicenses(swigCPtr);
    return ret;
  }

  public void Set_KKTLicense(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_KKTLicense(swigCPtr, value);
  }

  public void Set_LicenseNumber(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_LicenseNumber(swigCPtr, value);
  }

  public void Set_PUKCode(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_PUKCode(swigCPtr, value);
  }

  public bool Get_OFDExchangeSuspended() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_OFDExchangeSuspended(swigCPtr);
    return ret;
  }

  public void Set_OFDExchangeSuspended(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_OFDExchangeSuspended(swigCPtr, value);
  }

  public int CloseCheckBel() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_CloseCheckBel(swigCPtr);
    return ret;
  }

  public bool Get_AutoOFDExchange() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_AutoOFDExchange(swigCPtr);
    return ret;
  }

  public void Set_AutoOFDExchange(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_AutoOFDExchange(swigCPtr, value);
  }

  public int GetKKTLicenseByNumber() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetKKTLicenseByNumber(swigCPtr);
    return ret;
  }

  public int WriteKKTLicense() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WriteKKTLicense(swigCPtr);
    return ret;
  }

  public int FNSendSenderEmail() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendSenderEmail(swigCPtr);
    return ret;
  }

  public string Get_EmailAddress() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_EmailAddress(swigCPtr);
    return ret;
  }

  public void Set_EmailAddress(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_EmailAddress(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public string Get_Summ1AsString() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Summ1AsString(swigCPtr);
    return ret;
  }

  public string Get_Summ2AsString() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Summ2AsString(swigCPtr);
    return ret;
  }

  public string Get_Summ3AsString() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Summ3AsString(swigCPtr);
    return ret;
  }

  public string Get_Summ4AsString() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_Summ4AsString(swigCPtr);
    return ret;
  }

  public int DBGetNextDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DBGetNextDocument(swigCPtr);
    return ret;
  }

  public int DBPrintNextDocument() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DBPrintNextDocument(swigCPtr);
    return ret;
  }

  public int DBQueryDocumentsInSession() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_DBQueryDocumentsInSession(swigCPtr);
    return ret;
  }

  public int OnlinePay() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OnlinePay(swigCPtr);
    return ret;
  }

  public int OPGetLastRequisite() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPGetLastRequisite(swigCPtr);
    return ret;
  }

  public int OPGetLastStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPGetLastStatus(swigCPtr);
    return ret;
  }

  public int GenerateMonoToken() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GenerateMonoToken(swigCPtr);
    return ret;
  }

  public int RebootKKT() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_RebootKKT(swigCPtr);
    return ret;
  }

  public int FNAddTag() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNAddTag(swigCPtr);
    return ret;
  }

  public int FNBeginSTLVTag() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginSTLVTag(swigCPtr);
    return ret;
  }

  public int FNSendSTLVTag() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendSTLVTag(swigCPtr);
    return ret;
  }

  public int FNSendSTLVTagOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendSTLVTagOperation(swigCPtr);
    return ret;
  }

  public int FNSendTagOperation() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendTagOperation(swigCPtr);
    return ret;
  }

  public int Get_SymbolCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_SymbolCode(swigCPtr);
    return ret;
  }

  public void Set_SymbolCode(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_SymbolCode(swigCPtr, value);
  }

  public int Get_SymbolWidth() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_SymbolWidth(swigCPtr);
    return ret;
  }

  public void Set_SymbolWidth(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_SymbolWidth(swigCPtr, value);
  }

  public int Get_SymbolHeight() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_SymbolHeight(swigCPtr);
    return ret;
  }

  public void Set_SymbolHeight(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_SymbolHeight(swigCPtr, value);
  }

  public int Get_FileType() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_FileType(swigCPtr);
    return ret;
  }

  public void Set_FileType(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_FileType(swigCPtr, value);
  }

  public int Get_DelayOnDisconnect() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_DelayOnDisconnect(swigCPtr);
    return ret;
  }

  public void Set_DelayOnDisconnect(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_DelayOnDisconnect(swigCPtr, value);
  }

  public bool Get_WrapStrings() {
    bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_WrapStrings(swigCPtr);
    return ret;
  }

  public void Set_WrapStrings(bool value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_WrapStrings(swigCPtr, value);
  }

  public void Set_GTIN(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_GTIN(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public string Get_GTIN() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_GTIN(swigCPtr);
    return ret;
  }

  public int FNSendItemCodeData() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendItemCodeData(swigCPtr);
    return ret;
  }

  public int FNCheckItemBarcode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCheckItemBarcode(swigCPtr);
    return ret;
  }

  public int FNCheckItemBarcode2() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCheckItemBarcode2(swigCPtr);
    return ret;
  }

  public int FNRequestRegistrationTLV() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNRequestRegistrationTLV(swigCPtr);
    return ret;
  }

  public int ReadLoaderVersion() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadLoaderVersion(swigCPtr);
    return ret;
  }

  public int Get_RequestDocumentType() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_RequestDocumentType(swigCPtr);
    return ret;
  }

  public void Set_RequestDocumentType(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_RequestDocumentType(swigCPtr, value);
  }

  public int FNOpenCheckCorrection() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNOpenCheckCorrection(swigCPtr);
    return ret;
  }

  public int Get_WorkModeEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_WorkModeEx(swigCPtr);
    return ret;
  }

  public void Set_WorkModeEx(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_WorkModeEx(swigCPtr, value);
  }

  public string Get_INNOFD() {
    string ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_INNOFD(swigCPtr);
    return ret;
  }

  public void Set_INNOFD(string value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_INNOFD(swigCPtr, value);
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public int Get_RegistrationReasonCodeEx() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Get_RegistrationReasonCodeEx(swigCPtr);
    return ret;
  }

  public void Set_RegistrationReasonCodeEx(int value) {
    classic_fr_drv_ngPINVOKE.classic_interface_Set_RegistrationReasonCodeEx(swigCPtr, value);
  }

  public int FNCountersSync() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCountersSync(swigCPtr);
    return ret;
  }

  public int FNGetFreeMemoryResource() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetFreeMemoryResource(swigCPtr);
    return ret;
  }

  public int ReadCashDrawerSum() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadCashDrawerSum(swigCPtr);
    return ret;
  }

  public int ReadFeatureLicenses() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadFeatureLicenses(swigCPtr);
    return ret;
  }

  public int WriteFeatureLicenses() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_WriteFeatureLicenses(swigCPtr);
    return ret;
  }

  public int SetDeviceFunction() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_SetDeviceFunction(swigCPtr);
    return ret;
  }

  public int GetDeviceFunction() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetDeviceFunction(swigCPtr);
    return ret;
  }

  public int FNSendItemBarcode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSendItemBarcode(swigCPtr);
    return ret;
  }

  public int FNGetKMServerExchangeStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetKMServerExchangeStatus(swigCPtr);
    return ret;
  }

  public int FNGetMarkingCodeWorkStatus() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNGetMarkingCodeWorkStatus(swigCPtr);
    return ret;
  }

  public int FNBeginReadNotifications() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginReadNotifications(swigCPtr);
    return ret;
  }

  public int FNReadNotificationBlock() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNReadNotificationBlock(swigCPtr);
    return ret;
  }

  public int FNConfirmNotificationRead() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNConfirmNotificationRead(swigCPtr);
    return ret;
  }

  public int GetTagAsTLV() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_GetTagAsTLV(swigCPtr);
    return ret;
  }

  public int ReadRandomSequence() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReadRandomSequence(swigCPtr);
    return ret;
  }

  public int Authorization() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_Authorization(swigCPtr);
    return ret;
  }

  public int FNAcceptMarkingCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNAcceptMarkingCode(swigCPtr);
    return ret;
  }

  public int FNAcceptMakringCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNAcceptMakringCode(swigCPtr);
    return ret;
  }

  public int FNDeclineMarkingCode() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNDeclineMarkingCode(swigCPtr);
    return ret;
  }

  public int FNMarkingClearBuffer() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNMarkingClearBuffer(swigCPtr);
    return ret;
  }

  public int FNBindMarkingItem() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBindMarkingItem(swigCPtr);
    return ret;
  }

  public int FNBeginReadArchive() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNBeginReadArchive(swigCPtr);
    return ret;
  }

  public int FNReadArchiveItem() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNReadArchiveItem(swigCPtr);
    return ret;
  }

  public int FNSaveArchive() {
    int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSaveArchive(swigCPtr);
    return ret;
  }

  public void setPropertyChangedCallback(SWIGTYPE_p_std__functionT_void_fstd__string_const_RF_t arg0) {
    classic_fr_drv_ngPINVOKE.classic_interface_setPropertyChangedCallback(swigCPtr, SWIGTYPE_p_std__functionT_void_fstd__string_const_RF_t.getCPtr(arg0));
    if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void setLogCallback(SWIGTYPE_p_f_r_q_const__std__string__void func) {
    classic_fr_drv_ngPINVOKE.classic_interface_setLogCallback(SWIGTYPE_p_f_r_q_const__std__string__void.getCPtr(func));
  }

  public int ActivizationControlByte {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ActivizationControlByte_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ActivizationControlByte_get(swigCPtr);
      return ret;
    } 
  }

  public int ActivizationStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ActivizationStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ActivizationStatus_get(swigCPtr);
      return ret;
    } 
  }

  public bool AdjustRITimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AdjustRITimeout_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_AdjustRITimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int AnswerCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AnswerCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_AnswerCode_get(swigCPtr);
      return ret;
    } 
  }

  public int AttributeNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AttributeNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_AttributeNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string AttributeValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AttributeValue_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_AttributeValue_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool AutoSensorValues {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AutoSensorValues_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_AutoSensorValues_get(swigCPtr);
      return ret;
    } 
  }

  public bool AutoStartSearch {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AutoStartSearch_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_AutoStartSearch_get(swigCPtr);
      return ret;
    } 
  }

  public int BanknoteCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BanknoteCount_get(swigCPtr);
      return ret;
    } 
  }

  public int BanknoteType {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BanknoteType_get(swigCPtr);
      return ret;
    } 
  }

  public string BarCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarCode_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_BarCode_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public classic_interface.TBarcodeAlignment BarcodeAlignment {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeAlignment_set(swigCPtr, (int)value);
    } 
    get {
      classic_interface.TBarcodeAlignment ret = (classic_interface.TBarcodeAlignment)classic_fr_drv_ngPINVOKE.classic_interface_BarcodeAlignment_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeDataLength {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeDataLength_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeDataLength_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeFirstLine {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeFirstLine_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeFirstLine_get(swigCPtr);
      return ret;
    } 
  }

  public string BarcodeHex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeHex_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeHex_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int BarcodeParameter1 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter1_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter1_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeParameter2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter2_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter2_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeParameter3 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter3_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter3_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeParameter4 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter4_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter4_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeParameter5 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter5_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeParameter5_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeStartBlockNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeStartBlockNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeStartBlockNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int BarcodeType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarcodeType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarcodeType_get(swigCPtr);
      return ret;
    } 
  }

  public int BarWidth {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BarWidth_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BarWidth_get(swigCPtr);
      return ret;
    } 
  }

  public double BatteryVoltage {
    get {
      double ret = classic_fr_drv_ngPINVOKE.classic_interface_BatteryVoltage_get(swigCPtr);
      return ret;
    } 
  }

  public int BaudRate {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BaudRate_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BaudRate_get(swigCPtr);
      return ret;
    } 
  }

  public classic_interface.TBinaryConversion BinaryConversion {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BinaryConversion_set(swigCPtr, (int)value);
    } 
    get {
      classic_interface.TBinaryConversion ret = (classic_interface.TBinaryConversion)classic_fr_drv_ngPINVOKE.classic_interface_BinaryConversion_get(swigCPtr);
      return ret;
    } 
  }

  public BytesVector BlockData {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BlockData_set(swigCPtr, BytesVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = classic_fr_drv_ngPINVOKE.classic_interface_BlockData_get(swigCPtr);
      BytesVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new BytesVector(cPtr, true);
      return ret;
    } 
  }

  public string BlockDataHex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BlockDataHex_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_BlockDataHex_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int BlockNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BlockNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BlockNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int BlockType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BlockType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BlockType_get(swigCPtr);
      return ret;
    } 
  }

  public int BufferingType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_BufferingType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_BufferingType_get(swigCPtr);
      return ret;
    } 
  }

  public int CalculationSign {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CalculationSign_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CalculationSign_get(swigCPtr);
      return ret;
    } 
  }

  public bool CapGetShortECRStatus {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CapGetShortECRStatus_get(swigCPtr);
      return ret;
    } 
  }

  public bool CarryStrings {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CarryStrings_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CarryStrings_get(swigCPtr);
      return ret;
    } 
  }

  public int CashAcceptorPollingMode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashAcceptorPollingMode_get(swigCPtr);
      return ret;
    } 
  }

  public bool CashControlEnabled {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CashControlEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public string CashControlHost {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CashControlHost_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlHost_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int CashControlPassword {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CashControlPassword_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlPassword_get(swigCPtr);
      return ret;
    } 
  }

  public string CashControlPort {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CashControlPort_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlPort_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string CashControlProtocols {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlProtocols_get(swigCPtr);
      return ret;
    } 
  }

  public bool CashControlUseTCP {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CashControlUseTCP_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CashControlUseTCP_get(swigCPtr);
      return ret;
    } 
  }

  public int ccHeaderLineCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ccHeaderLineCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ccHeaderLineCount_get(swigCPtr);
      return ret;
    } 
  }

  public bool ccUseTextAsWareName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ccUseTextAsWareName_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ccUseTextAsWareName_get(swigCPtr);
      return ret;
    } 
  }

  public int ccWareNameLineNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ccWareNameLineNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ccWareNameLineNumber_get(swigCPtr);
      return ret;
    } 
  }

  public bool CenterImage {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CenterImage_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CenterImage_get(swigCPtr);
      return ret;
    } 
  }

  public long Change {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Change_get(swigCPtr);
      return ret;
    } 
  }

  public int ChangeFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChangeFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeFont_get(swigCPtr);
      return ret;
    } 
  }

  public int ChangeOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChangeOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int ChangeStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChangeStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int ChangeSumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChangeSumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeSumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int ChangeSumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChangeSumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeSumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int ChangeSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChangeSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ChangeSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long ChargeValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ChargeValue_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_ChargeValue_get(swigCPtr);
      return ret;
    } 
  }

  public int CharHeight {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CharHeight_get(swigCPtr);
      return ret;
    } 
  }

  public int CharWidth {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CharWidth_get(swigCPtr);
      return ret;
    } 
  }

  public bool CheckEJConnection {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckEJConnection_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckEJConnection_get(swigCPtr);
      return ret;
    } 
  }

  public bool CheckFMConnection {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckFMConnection_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckFMConnection_get(swigCPtr);
      return ret;
    } 
  }

  public int CheckingType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckingType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckingType_get(swigCPtr);
      return ret;
    } 
  }

  public int CheckType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckType_get(swigCPtr);
      return ret;
    } 
  }

  public string ConnectionURI {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ConnectionURI_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ConnectionURI_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int ClicheFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ClicheFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClicheFont_get(swigCPtr);
      return ret;
    } 
  }

  public int ClicheOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ClicheOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClicheOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int ClicheStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ClicheStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ClicheStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public bool CloudCashdeskEnabled {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CloudCashdeskEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CloudCashdeskEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public classic_interface.TCodePage CodePage {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CodePage_set(swigCPtr, (int)value);
    } 
    get {
      classic_interface.TCodePage ret = (classic_interface.TCodePage)classic_fr_drv_ngPINVOKE.classic_interface_CodePage_get(swigCPtr);
      return ret;
    } 
  }

  public int CommandCode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandCode_get(swigCPtr);
      return ret;
    } 
  }

  public int CommandCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandCount_get(swigCPtr);
      return ret;
    } 
  }

  public int CommandDefTimeout {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandDefTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int CommandIndex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CommandIndex_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandIndex_get(swigCPtr);
      return ret;
    } 
  }

  public string CommandName {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandName_get(swigCPtr);
      return ret;
    } 
  }

  public int CommandRetryCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CommandRetryCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandRetryCount_get(swigCPtr);
      return ret;
    } 
  }

  public int CommandTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CommandTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CommandTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int ComNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ComNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ComNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string ComputerName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ComputerName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ComputerName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool Connected {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Connected_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_Connected_get(swigCPtr);
      return ret;
    } 
  }

  public int ConnectionTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ConnectionTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ConnectionTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public classic_interface.TConnectionType ConnectionType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ConnectionType_set(swigCPtr, (int)value);
    } 
    get {
      classic_interface.TConnectionType ret = (classic_interface.TConnectionType)classic_fr_drv_ngPINVOKE.classic_interface_ConnectionType_get(swigCPtr);
      return ret;
    } 
  }

  public long ContentsOfCashRegister {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_ContentsOfCashRegister_get(swigCPtr);
      return ret;
    } 
  }

  public int ContentsOfOperationRegister {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ContentsOfOperationRegister_get(swigCPtr);
      return ret;
    } 
  }

  public int CopyOffset1 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset1_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset1_get(swigCPtr);
      return ret;
    } 
  }

  public int CopyOffset2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset2_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset2_get(swigCPtr);
      return ret;
    } 
  }

  public int CopyOffset3 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset3_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset3_get(swigCPtr);
      return ret;
    } 
  }

  public int CopyOffset4 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset4_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset4_get(swigCPtr);
      return ret;
    } 
  }

  public int CopyOffset5 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset5_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CopyOffset5_get(swigCPtr);
      return ret;
    } 
  }

  public int CopyType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CopyType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CopyType_get(swigCPtr);
      return ret;
    } 
  }

  public int CorrectionType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CorrectionType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CorrectionType_get(swigCPtr);
      return ret;
    } 
  }

  public int CustomerCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CustomerCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CustomerCode_get(swigCPtr);
      return ret;
    } 
  }

  public string CustomerEmail {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CustomerEmail_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_CustomerEmail_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool CutType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CutType_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_CutType_get(swigCPtr);
      return ret;
    } 
  }

  public string DataBlock {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_DataBlock_get(swigCPtr);
      return ret;
    } 
  }

  public int DataBlockNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DataBlockNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DataLength {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DataLength_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DataLength_get(swigCPtr);
      return ret;
    } 
  }

  public long Date {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Date_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Date_get(swigCPtr);
      return ret;
    } 
  }

  public long Date2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Date2_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Date2_get(swigCPtr);
      return ret;
    } 
  }

  public int DBDocType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DBDocType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DBDocType_get(swigCPtr);
      return ret;
    } 
  }

  public string DBFilePath {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DBFilePath_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_DBFilePath_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool DelayedPrint {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DelayedPrint_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_DelayedPrint_get(swigCPtr);
      return ret;
    } 
  }

  public int Department {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Department_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Department_get(swigCPtr);
      return ret;
    } 
  }

  public int DepartmentFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DepartmentFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DepartmentFont_get(swigCPtr);
      return ret;
    } 
  }

  public int DepartmentOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DepartmentOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DepartmentOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int DepartmentStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DepartmentStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DepartmentStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DepartmentSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DepartmentSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DepartmentSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DeviceCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DeviceCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DeviceCode_get(swigCPtr);
      return ret;
    } 
  }

  public string DeviceCodeDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_DeviceCodeDescription_get(swigCPtr);
      return ret;
    } 
  }

  public long Discount1 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Discount1_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Discount1_get(swigCPtr);
      return ret;
    } 
  }

  public long Discount2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Discount2_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Discount2_get(swigCPtr);
      return ret;
    } 
  }

  public long Discount3 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Discount3_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Discount3_get(swigCPtr);
      return ret;
    } 
  }

  public long Discount4 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Discount4_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Discount4_get(swigCPtr);
      return ret;
    } 
  }

  public double DiscountOnCheck {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheck_set(swigCPtr, value);
    } 
    get {
      double ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheck_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckFont_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckSumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckSumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckSumSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSumSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSumSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DiscountOnCheckSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountOnCheckSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long DiscountValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DiscountValue_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_DiscountValue_get(swigCPtr);
      return ret;
    } 
  }

  public int DocumentCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DocumentCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DocumentCount_get(swigCPtr);
      return ret;
    } 
  }

  public string DocumentName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DocumentName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_DocumentName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int DocumentNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DocumentNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DocumentNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DocumentType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DocumentType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DocumentType_get(swigCPtr);
      return ret;
    } 
  }

  public bool DoNotSendENQ {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DoNotSendENQ_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_DoNotSendENQ_get(swigCPtr);
      return ret;
    } 
  }

  public int DrawerNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DrawerNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DrawerNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int DriverBuild {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DriverBuild_get(swigCPtr);
      return ret;
    } 
  }

  public int DriverMajorVersion {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DriverMajorVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int DriverMinorVersion {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DriverMinorVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int DriverRelease {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DriverRelease_get(swigCPtr);
      return ret;
    } 
  }

  public string DriverVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_DriverVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int ECRAdvancedMode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRAdvancedMode_get(swigCPtr);
      return ret;
    } 
  }

  public string ECRAdvancedModeDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRAdvancedModeDescription_get(swigCPtr);
      return ret;
    } 
  }

  public int ECRBuild {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRBuild_get(swigCPtr);
      return ret;
    } 
  }

  public long ECRDate {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ECRDate_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRDate_get(swigCPtr);
      return ret;
    } 
  }

  public int ECRFlags {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRFlags_get(swigCPtr);
      return ret;
    } 
  }

  public string ECRID {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ECRID_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRID_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string ECRInput {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRInput_get(swigCPtr);
      return ret;
    } 
  }

  public int ECRMode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRMode_get(swigCPtr);
      return ret;
    } 
  }

  public int ECRMode8Status {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRMode8Status_get(swigCPtr);
      return ret;
    } 
  }

  public string ECRModeDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRModeDescription_get(swigCPtr);
      return ret;
    } 
  }

  public int ECRModeStatus {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRModeStatus_get(swigCPtr);
      return ret;
    } 
  }

  public string ECROutput {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ECROutput_get(swigCPtr);
      return ret;
    } 
  }

  public long ECRSoftDate {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRSoftDate_get(swigCPtr);
      return ret;
    } 
  }

  public string ECRSoftVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRSoftVersion_get(swigCPtr);
      return ret;
    } 
  }

  public long ECRTime {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ECRTime_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_ECRTime_get(swigCPtr);
      return ret;
    } 
  }

  public int EjectDirection {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EjectDirection_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EjectDirection_get(swigCPtr);
      return ret;
    } 
  }

  public string EKLZData {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZData_get(swigCPtr);
      return ret;
    } 
  }

  public int EKLZFlags {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZFlags_get(swigCPtr);
      return ret;
    } 
  }

  public int EKLZFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EKLZFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZFont_get(swigCPtr);
      return ret;
    } 
  }

  public bool EKLZIsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZIsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public string EKLZNumber {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int EKLZOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EKLZOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int EKLZResultCode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZResultCode_get(swigCPtr);
      return ret;
    } 
  }

  public int EKLZStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EKLZStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string EKLZVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_EKLZVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int ErrorCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ErrorCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ErrorCode_get(swigCPtr);
      return ret;
    } 
  }

  public string ErrorDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ErrorDescription_get(swigCPtr);
      return ret;
    } 
  }

  public string EscapeIP {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EscapeIP_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_EscapeIP_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int EscapePort {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EscapePort_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EscapePort_get(swigCPtr);
      return ret;
    } 
  }

  public int EscapeTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EscapeTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_EscapeTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int ExciseCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ExciseCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ExciseCode_get(swigCPtr);
      return ret;
    } 
  }

  public bool FeedAfterCut {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FeedAfterCut_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_FeedAfterCut_get(swigCPtr);
      return ret;
    } 
  }

  public int FeedLineCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FeedLineCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FeedLineCount_get(swigCPtr);
      return ret;
    } 
  }

  public string FieldName {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_FieldName_get(swigCPtr);
      return ret;
    } 
  }

  public int FieldNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FieldNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FieldNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int FieldSize {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FieldSize_get(swigCPtr);
      return ret;
    } 
  }

  public bool FieldType {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_FieldType_get(swigCPtr);
      return ret;
    } 
  }

  public string FileName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FileName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_FileName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public classic_interface.TFinishDocumentMode FinishDocumentMode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FinishDocumentMode_set(swigCPtr, (int)value);
    } 
    get {
      classic_interface.TFinishDocumentMode ret = (classic_interface.TFinishDocumentMode)classic_fr_drv_ngPINVOKE.classic_interface_FinishDocumentMode_get(swigCPtr);
      return ret;
    } 
  }

  public int FirstLineNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FirstLineNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FirstLineNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long FirstSessionDate {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FirstSessionDate_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_FirstSessionDate_get(swigCPtr);
      return ret;
    } 
  }

  public int FirstSessionNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FirstSessionNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FirstSessionNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int FiscalSign {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FiscalSign_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FiscalSign_get(swigCPtr);
      return ret;
    } 
  }

  public string FiscalSignAsString {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_FiscalSignAsString_get(swigCPtr);
      return ret;
    } 
  }

  public string FiscalSignOFD {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FiscalSignOFD_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_FiscalSignOFD_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool FM1IsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_FM1IsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public bool FM2IsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_FM2IsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public int FMBuild {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMBuild_get(swigCPtr);
      return ret;
    } 
  }

  public int FMFlags {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMFlags_get(swigCPtr);
      return ret;
    } 
  }

  public int FMFlagsEx {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMFlagsEx_get(swigCPtr);
      return ret;
    } 
  }

  public int FMMode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMMode_get(swigCPtr);
      return ret;
    } 
  }

  public int FMOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FMOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMOffset_get(swigCPtr);
      return ret;
    } 
  }

  public bool FMOverflow {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_FMOverflow_get(swigCPtr);
      return ret;
    } 
  }

  public int FMResultCode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMResultCode_get(swigCPtr);
      return ret;
    } 
  }

  public long FMSoftDate {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_FMSoftDate_get(swigCPtr);
      return ret;
    } 
  }

  public string FMSoftVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_FMSoftVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int FMStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FMStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FMStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int FNCurrentDocument {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FNCurrentDocument_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNCurrentDocument_get(swigCPtr);
      return ret;
    } 
  }

  public int FNDocumentData {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNDocumentData_get(swigCPtr);
      return ret;
    } 
  }

  public int FNLifeState {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNLifeState_get(swigCPtr);
      return ret;
    } 
  }

  public int FNSessionState {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSessionState_get(swigCPtr);
      return ret;
    } 
  }

  public int FNSoftType {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSoftType_get(swigCPtr);
      return ret;
    } 
  }

  public string FNSoftVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_FNSoftVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int FNWarningFlags {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNWarningFlags_get(swigCPtr);
      return ret;
    } 
  }

  public int FontCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FontCount_get(swigCPtr);
      return ret;
    } 
  }

  public int FontType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FontType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FontType_get(swigCPtr);
      return ret;
    } 
  }

  public int FreeRecordInFM {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FreeRecordInFM_get(swigCPtr);
      return ret;
    } 
  }

  public int FreeRegistration {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FreeRegistration_get(swigCPtr);
      return ret;
    } 
  }

  public int HeaderFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_HeaderFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_HeaderFont_get(swigCPtr);
      return ret;
    } 
  }

  public int HeaderOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_HeaderOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_HeaderOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int HeaderStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_HeaderStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_HeaderStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int HorizScale {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_HorizScale_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_HorizScale_get(swigCPtr);
      return ret;
    } 
  }

  public int HRIPosition {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_HRIPosition_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_HRIPosition_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMDocumentNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMDocumentNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMFlags {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMFlags_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMLastBuyReceiptNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMLastBuyReceiptNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMLastReturnBuyReceiptNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMLastReturnBuyReceiptNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMLastReturnSaleReceiptNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMLastReturnSaleReceiptNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMLastSaleReceiptNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMLastSaleReceiptNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long IBMSessionDateTime {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionDateTime_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMSessionDay {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionDay_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMSessionHour {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionHour_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMSessionMin {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionMin_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMSessionMonth {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionMonth_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMSessionSec {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionSec_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMSessionYear {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMSessionYear_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte1 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte1_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte2 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte2_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte3 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte3_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte4 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte4_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte5 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte5_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte6 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte6_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte7 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte7_get(swigCPtr);
      return ret;
    } 
  }

  public int IBMStatusByte8 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IBMStatusByte8_get(swigCPtr);
      return ret;
    } 
  }

  public int InfoExchangeStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_InfoExchangeStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_InfoExchangeStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int InfoType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_InfoType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_InfoType_get(swigCPtr);
      return ret;
    } 
  }

  public string INN {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_INN_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_INN_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int INNAsInteger {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_INNAsInteger_get(swigCPtr);
      return ret;
    } 
  }

  public int IntervalNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_IntervalNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IntervalNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int IntervalValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_IntervalValue_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_IntervalValue_get(swigCPtr);
      return ret;
    } 
  }

  public string IPAddress {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_IPAddress_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_IPAddress_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool IsASPDMode {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsASPDMode_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsBatteryLow {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsBatteryLow_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsBlockedByWrongTaxPassword {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsBlockedByWrongTaxPassword_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsClearUnfiscalInfo {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_IsClearUnfiscalInfo_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsClearUnfiscalInfo_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsCorruptedFiscalizationInfo {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsCorruptedFiscalizationInfo_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsCorruptedFMRecords {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsCorruptedFMRecords_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsDrawerOpen {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsDrawerOpen_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsEKLZOverflow {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsEKLZOverflow_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsFM24HoursOver {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsFM24HoursOver_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsFMSessionOpen {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsFMSessionOpen_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsLastFMRecordCorrupted {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsLastFMRecordCorrupted_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsPrinterLeftSensorFailure {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsPrinterLeftSensorFailure_get(swigCPtr);
      return ret;
    } 
  }

  public bool IsPrinterRightSensorFailure {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_IsPrinterRightSensorFailure_get(swigCPtr);
      return ret;
    } 
  }

  public bool JournalEnabled {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_JournalEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public bool JournalRibbonIsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalRibbonIsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public bool JournalRibbonLever {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalRibbonLever_get(swigCPtr);
      return ret;
    } 
  }

  public bool JournalRibbonOpticalSensor {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalRibbonOpticalSensor_get(swigCPtr);
      return ret;
    } 
  }

  public string JournalRow {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalRow_get(swigCPtr);
      return ret;
    } 
  }

  public int JournalRowCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalRowCount_get(swigCPtr);
      return ret;
    } 
  }

  public int JournalRowNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_JournalRowNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalRowNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string JournalText {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_JournalText_get(swigCPtr);
      return ret;
    } 
  }

  public string KKTRegistrationNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KKTRegistrationNumber_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_KKTRegistrationNumber_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int KPKFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KPKFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_KPKFont_get(swigCPtr);
      return ret;
    } 
  }

  public int KPKNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KPKNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_KPKNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int KPKOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KPKOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_KPKOffset_get(swigCPtr);
      return ret;
    } 
  }

  public string KPKStr {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_KPKStr_get(swigCPtr);
      return ret;
    } 
  }

  public int KPKValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KPKValue_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_KPKValue_get(swigCPtr);
      return ret;
    } 
  }

  public string KSAInfo {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KSAInfo_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_KSAInfo_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int LastFMRecordType {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LastFMRecordType_get(swigCPtr);
      return ret;
    } 
  }

  public long LastKPKDate {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_LastKPKDate_get(swigCPtr);
      return ret;
    } 
  }

  public string LastKPKDateStr {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LastKPKDateStr_get(swigCPtr);
      return ret;
    } 
  }

  public long LastKPKDocumentResult {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_LastKPKDocumentResult_get(swigCPtr);
      return ret;
    } 
  }

  public int LastKPKNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LastKPKNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long LastKPKTime {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_LastKPKTime_get(swigCPtr);
      return ret;
    } 
  }

  public string LastKPKTimeStr {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LastKPKTimeStr_get(swigCPtr);
      return ret;
    } 
  }

  public int LastLineNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LastLineNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LastLineNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int LastPrintResult {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LastPrintResult_get(swigCPtr);
      return ret;
    } 
  }

  public long LastSessionDate {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LastSessionDate_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_LastSessionDate_get(swigCPtr);
      return ret;
    } 
  }

  public int LastSessionNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LastSessionNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LastSessionNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int LDBaudrate {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDBaudrate_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDBaudrate_get(swigCPtr);
      return ret;
    } 
  }

  public int LDComNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDComNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDComNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string LDComputerName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDComputerName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LDComputerName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public classic_interface.TConnectionType LDConnectionType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDConnectionType_set(swigCPtr, (int)value);
    } 
    get {
      classic_interface.TConnectionType ret = (classic_interface.TConnectionType)classic_fr_drv_ngPINVOKE.classic_interface_LDConnectionType_get(swigCPtr);
      return ret;
    } 
  }

  public int LDCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDCount_get(swigCPtr);
      return ret;
    } 
  }

  public string LDEscapeIP {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDEscapeIP_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LDEscapeIP_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int LDEscapePort {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDEscapePort_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDEscapePort_get(swigCPtr);
      return ret;
    } 
  }

  public int LDEscapeTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDEscapeTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDEscapeTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int LDIndex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDIndex_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDIndex_get(swigCPtr);
      return ret;
    } 
  }

  public string LDIPAddress {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDIPAddress_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LDIPAddress_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string LDName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LDName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int LDNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int LDProtocolType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDProtocolType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDProtocolType_get(swigCPtr);
      return ret;
    } 
  }

  public int LDSysAdminPassword {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDSysAdminPassword_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDSysAdminPassword_get(swigCPtr);
      return ret;
    } 
  }

  public int LDTCPPort {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDTCPPort_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDTCPPort_get(swigCPtr);
      return ret;
    } 
  }

  public int LDTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LDTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public bool LDUseIPAddress {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LDUseIPAddress_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_LDUseIPAddress_get(swigCPtr);
      return ret;
    } 
  }

  public string License {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_License_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_License_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool LicenseIsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_LicenseIsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public bool LidPositionSensor {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_LidPositionSensor_get(swigCPtr);
      return ret;
    } 
  }

  public string LineData {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LineData_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LineData_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string LineData2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LineData2_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LineData2_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string LineDataHex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LineDataHex_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LineDataHex_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int LineNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LineNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LineNumber_get(swigCPtr);
      return ret;
    } 
  }

  public bool LineSwapBytes {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LineSwapBytes_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_LineSwapBytes_get(swigCPtr);
      return ret;
    } 
  }

  public int LockTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LockTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LockTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int LogicalNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LogicalNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int LogMaxFileCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LogMaxFileCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LogMaxFileCount_get(swigCPtr);
      return ret;
    } 
  }

  public int LogMaxFileSize {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LogMaxFileSize_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LogMaxFileSize_get(swigCPtr);
      return ret;
    } 
  }

  public bool LogOn {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LogOn_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_LogOn_get(swigCPtr);
      return ret;
    } 
  }

  public int MAXValueOfField {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MAXValueOfField_get(swigCPtr);
      return ret;
    } 
  }

  public int MessageCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MessageCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MessageCount_get(swigCPtr);
      return ret;
    } 
  }

  public int MessageState {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MessageState_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MessageState_get(swigCPtr);
      return ret;
    } 
  }

  public string MethodName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MethodName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_MethodName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string MFPNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MFPNumber_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPNumber_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int MFPStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MFPStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MFPStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int MINValueOfField {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MINValueOfField_get(swigCPtr);
      return ret;
    } 
  }

  public bool MobilePayEnabled {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MobilePayEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_MobilePayEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public int ModelID {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ModelID_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelID_get(swigCPtr);
      return ret;
    } 
  }

  public int ModelIndex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ModelIndex_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelIndex_get(swigCPtr);
      return ret;
    } 
  }

  public string ModelNames {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelNames_get(swigCPtr);
      return ret;
    } 
  }

  public int ModelParamCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelParamCount_get(swigCPtr);
      return ret;
    } 
  }

  public string ModelParamDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelParamDescription_get(swigCPtr);
      return ret;
    } 
  }

  public int ModelParamIndex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ModelParamIndex_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelParamIndex_get(swigCPtr);
      return ret;
    } 
  }

  public int ModelParamNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ModelParamNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelParamNumber_get(swigCPtr);
      return ret;
    } 
  }

  public bool ModelParamValue {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelParamValue_get(swigCPtr);
      return ret;
    } 
  }

  public int ModelsCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ModelsCount_get(swigCPtr);
      return ret;
    } 
  }

  public int MultiplicationFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MultiplicationFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MultiplicationFont_get(swigCPtr);
      return ret;
    } 
  }

  public string NameCashReg {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_NameCashReg_get(swigCPtr);
      return ret;
    } 
  }

  public string NameCashRegEx {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_NameCashRegEx_get(swigCPtr);
      return ret;
    } 
  }

  public string NameOperationReg {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_NameOperationReg_get(swigCPtr);
      return ret;
    } 
  }

  public int NewPasswordTI {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_NewPasswordTI_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_NewPasswordTI_get(swigCPtr);
      return ret;
    } 
  }

  public int NewSCPassword {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_NewSCPassword_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_NewSCPassword_get(swigCPtr);
      return ret;
    } 
  }

  public int NumberOfCopies {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_NumberOfCopies_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_NumberOfCopies_get(swigCPtr);
      return ret;
    } 
  }

  public bool OFDTicketReceived {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OFDTicketReceived_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_OFDTicketReceived_get(swigCPtr);
      return ret;
    } 
  }

  public int OPBarcodeInputType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPBarcodeInputType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPBarcodeInputType_get(swigCPtr);
      return ret;
    } 
  }

  public int OpenDocumentNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OpenDocumentNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int OperationBlockFirstString {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OperationBlockFirstString_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OperationBlockFirstString_get(swigCPtr);
      return ret;
    } 
  }

  public int OperationNameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OperationNameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OperationNameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int OperationNameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OperationNameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OperationNameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int OperationNameStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OperationNameStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OperationNameStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int OperatorNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OperatorNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int OperationType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OperationType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OperationType_get(swigCPtr);
      return ret;
    } 
  }

  public string OPIdPayment {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPIdPayment_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_OPIdPayment_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int OPRequisiteNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPRequisiteNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPRequisiteNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string OPRequisiteValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPRequisiteValue_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_OPRequisiteValue_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int OPSystem {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPSystem_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPSystem_get(swigCPtr);
      return ret;
    } 
  }

  public int OPTransactionStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPTransactionStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPTransactionStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int OPTransactionType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_OPTransactionType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_OPTransactionType_get(swigCPtr);
      return ret;
    } 
  }

  public string ParameterValue {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ParameterValue_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ParameterValue_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int ParentWnd {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ParentWnd_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ParentWnd_get(swigCPtr);
      return ret;
    } 
  }

  public int Password {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Password_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Password_get(swigCPtr);
      return ret;
    } 
  }

  public int PayDepartment {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PayDepartment_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PayDepartment_get(swigCPtr);
      return ret;
    } 
  }

  public int PaymentItemSign {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PaymentItemSign_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PaymentItemSign_get(swigCPtr);
      return ret;
    } 
  }

  public int PaymentTypeSign {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PaymentTypeSign_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PaymentTypeSign_get(swigCPtr);
      return ret;
    } 
  }

  public int PermitActivizationCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PermitActivizationCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PermitActivizationCode_get(swigCPtr);
      return ret;
    } 
  }

  public int PingResult {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PingResult_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PingResult_get(swigCPtr);
      return ret;
    } 
  }

  public int PingTime {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PingTime_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PingTime_get(swigCPtr);
      return ret;
    } 
  }

  public bool PointPosition {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PointPosition_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_PointPosition_get(swigCPtr);
      return ret;
    } 
  }

  public int Poll1 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Poll1_get(swigCPtr);
      return ret;
    } 
  }

  public int Poll2 {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Poll2_get(swigCPtr);
      return ret;
    } 
  }

  public string PosControlReceiptSeparator {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PosControlReceiptSeparator_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_PosControlReceiptSeparator_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool PortLocked {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_PortLocked_get(swigCPtr);
      return ret;
    } 
  }

  public int PortNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PortNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PortNumber_get(swigCPtr);
      return ret;
    } 
  }

  public double PowerSourceVoltage {
    get {
      double ret = classic_fr_drv_ngPINVOKE.classic_interface_PowerSourceVoltage_get(swigCPtr);
      return ret;
    } 
  }

  public int PrepareActivizationRemainCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PrepareActivizationRemainCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrepareActivizationRemainCount_get(swigCPtr);
      return ret;
    } 
  }

  public bool PresenterIn {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_PresenterIn_get(swigCPtr);
      return ret;
    } 
  }

  public bool PresenterOut {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_PresenterOut_get(swigCPtr);
      return ret;
    } 
  }

  public long Price {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Price_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Price_get(swigCPtr);
      return ret;
    } 
  }

  public int PriceFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PriceFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PriceFont_get(swigCPtr);
      return ret;
    } 
  }

  public int PriceSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PriceSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PriceSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int PrintBarcodeText {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PrintBarcodeText_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBarcodeText_get(swigCPtr);
      return ret;
    } 
  }

  public int PrintBufferFormat {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PrintBufferFormat_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBufferFormat_get(swigCPtr);
      return ret;
    } 
  }

  public int PrintBufferLineNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintBufferLineNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int PrintingAlignment {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PrintingAlignment_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintingAlignment_get(swigCPtr);
      return ret;
    } 
  }

  public bool PrintJournalBeforeZReport {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PrintJournalBeforeZReport_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintJournalBeforeZReport_get(swigCPtr);
      return ret;
    } 
  }

  public int PrintWidth {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_PrintWidth_get(swigCPtr);
      return ret;
    } 
  }

  public string PropertyName {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_PropertyName_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_PropertyName_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int ProtocolType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ProtocolType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ProtocolType_get(swigCPtr);
      return ret;
    } 
  }

  public double Quantity {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Quantity_set(swigCPtr, value);
    } 
    get {
      double ret = classic_fr_drv_ngPINVOKE.classic_interface_Quantity_get(swigCPtr);
      return ret;
    } 
  }

  public int QuantityFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_QuantityFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantityFont_get(swigCPtr);
      return ret;
    } 
  }

  public int QuantityFormat {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_QuantityFormat_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantityFormat_get(swigCPtr);
      return ret;
    } 
  }

  public int QuantityOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_QuantityOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantityOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int QuantityOfOperations {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantityOfOperations_get(swigCPtr);
      return ret;
    } 
  }

  public bool QuantityPointPosition {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantityPointPosition_get(swigCPtr);
      return ret;
    } 
  }

  public int QuantityStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_QuantityStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantityStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int QuantitySymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_QuantitySymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_QuantitySymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int RealPayDepartment {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RealPayDepartment_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RealPayDepartment_get(swigCPtr);
      return ret;
    } 
  }

  public int ReceiptNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ReceiptNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReceiptNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int ReceiptOutputType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ReceiptOutputType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReceiptOutputType_get(swigCPtr);
      return ret;
    } 
  }

  public bool ReceiptRibbonIsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ReceiptRibbonIsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public bool ReceiptRibbonLever {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ReceiptRibbonLever_get(swigCPtr);
      return ret;
    } 
  }

  public bool ReceiptRibbonOpticalSensor {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ReceiptRibbonOpticalSensor_get(swigCPtr);
      return ret;
    } 
  }

  public bool ReconnectPort {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ReconnectPort_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ReconnectPort_get(swigCPtr);
      return ret;
    } 
  }

  public int RecordCount {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RecordCount_get(swigCPtr);
      return ret;
    } 
  }

  public long RegBuyRec {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegBuyRec_get(swigCPtr);
      return ret;
    } 
  }

  public long RegBuyReturnRec {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegBuyReturnRec_get(swigCPtr);
      return ret;
    } 
  }

  public long RegBuyReturnSession {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegBuyReturnSession_get(swigCPtr);
      return ret;
    } 
  }

  public long RegBuySession {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegBuySession_get(swigCPtr);
      return ret;
    } 
  }

  public int RegisterNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RegisterNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RegisterNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int RegistrationNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RegistrationNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RegistrationNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int RegistrationReasonCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RegistrationReasonCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RegistrationReasonCode_get(swigCPtr);
      return ret;
    } 
  }

  public long RegSaleRec {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegSaleRec_get(swigCPtr);
      return ret;
    } 
  }

  public long RegSaleReturnRec {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegSaleReturnRec_get(swigCPtr);
      return ret;
    } 
  }

  public long RegSaleReturnSession {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegSaleReturnSession_get(swigCPtr);
      return ret;
    } 
  }

  public long RegSaleSession {
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_RegSaleSession_get(swigCPtr);
      return ret;
    } 
  }

  public bool ReportType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ReportType_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ReportType_get(swigCPtr);
      return ret;
    } 
  }

  public int ReportTypeInt {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ReportTypeInt_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ReportTypeInt_get(swigCPtr);
      return ret;
    } 
  }

  public bool RequestErrorDescription {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RequestErrorDescription_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_RequestErrorDescription_get(swigCPtr);
      return ret;
    } 
  }

  public int RequestType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RequestType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RequestType_get(swigCPtr);
      return ret;
    } 
  }

  public int ResultCode {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ResultCode_get(swigCPtr);
      return ret;
    } 
  }

  public string ResultCodeDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ResultCodeDescription_get(swigCPtr);
      return ret;
    } 
  }

  public string RNM {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RNM_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_RNM_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int RoundingSumm {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RoundingSumm_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RoundingSumm_get(swigCPtr);
      return ret;
    } 
  }

  public int RowNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RowNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RowNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int RunningPeriod {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RunningPeriod_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_RunningPeriod_get(swigCPtr);
      return ret;
    } 
  }

  public bool SaleError {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SaleError_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_SaleError_get(swigCPtr);
      return ret;
    } 
  }

  public int SaveSettingsType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SaveSettingsType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SaveSettingsType_get(swigCPtr);
      return ret;
    } 
  }

  public int SCPassword {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SCPassword_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SCPassword_get(swigCPtr);
      return ret;
    } 
  }

  public int SearchTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SearchTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SearchTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public string SerialNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SerialNumber_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_SerialNumber_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int SerialNumberAsInteger {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SerialNumberAsInteger_get(swigCPtr);
      return ret;
    } 
  }

  public bool ServerConnected {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ServerConnected_get(swigCPtr);
      return ret;
    } 
  }

  public string ServerVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ServerVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int SessionNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SessionNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SessionNumber_get(swigCPtr);
      return ret;
    } 
  }

  public bool ShowProgress {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ShowProgress_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowProgress_get(swigCPtr);
      return ret;
    } 
  }

  public bool ShowTagNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ShowTagNumber_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_ShowTagNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int SKNOError {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SKNOError_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SKNOError_get(swigCPtr);
      return ret;
    } 
  }

  public string SKNOIdentifier {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SKNOIdentifier_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_SKNOIdentifier_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int SKNOStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SKNOStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SKNOStatus_get(swigCPtr);
      return ret;
    } 
  }

  public bool SlipDocumentIsMoving {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipDocumentIsMoving_get(swigCPtr);
      return ret;
    } 
  }

  public bool SlipDocumentIsPresent {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipDocumentIsPresent_get(swigCPtr);
      return ret;
    } 
  }

  public int SlipDocumentLength {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SlipDocumentLength_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipDocumentLength_get(swigCPtr);
      return ret;
    } 
  }

  public int SlipDocumentWidth {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SlipDocumentWidth_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipDocumentWidth_get(swigCPtr);
      return ret;
    } 
  }

  public int SlipEqualStringIntervals {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SlipEqualStringIntervals_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipEqualStringIntervals_get(swigCPtr);
      return ret;
    } 
  }

  public int SlipStringInterval {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SlipStringInterval_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipStringInterval_get(swigCPtr);
      return ret;
    } 
  }

  public string SlipStringIntervals {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SlipStringIntervals_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_SlipStringIntervals_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string StringForPrinting {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_StringForPrinting_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_StringForPrinting_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int StringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_StringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_StringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int StringQuantity {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_StringQuantity_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_StringQuantity_get(swigCPtr);
      return ret;
    } 
  }

  public int StringQuantityInOperation {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_StringQuantityInOperation_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_StringQuantityInOperation_get(swigCPtr);
      return ret;
    } 
  }

  public int SubTotalFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SubTotalFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SubTotalFont_get(swigCPtr);
      return ret;
    } 
  }

  public int SubTotalOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SubTotalOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SubTotalOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int SubTotalStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SubTotalStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SubTotalStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int SubTotalSumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SubTotalSumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SubTotalSumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int SubTotalSumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SubTotalSumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SubTotalSumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int SubTotalSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SubTotalSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SubTotalSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ1 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ1Font {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1Font_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1Font_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ1NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ1NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ1Offset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1Offset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1Offset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ1StringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1StringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1StringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ1SymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ1SymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ1SymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ2Font {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2Font_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2Font_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ2NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ2NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ2Offset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2Offset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2Offset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ2StringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2StringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2StringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ2SymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ2SymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ2SymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ3 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ3Font {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3Font_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3Font_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ3NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ3NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ3Offset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3Offset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3Offset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ3StringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3StringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3StringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ3SymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ3SymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ3SymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ4 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ4Font {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4Font_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4Font_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ4NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ4NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ4Offset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4Offset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4Offset_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ4StringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4StringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4StringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Summ4SymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ4SymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ4SymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ5 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ5_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ5_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ6 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ6_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ6_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ7 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ7_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ7_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ8 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ8_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ8_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ9 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ9_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ9_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ10 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ10_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ10_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ11 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ11_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ11_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ12 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ12_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ12_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ13 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ13_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ13_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ14 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ14_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ14_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ15 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ15_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ15_get(swigCPtr);
      return ret;
    } 
  }

  public long Summ16 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Summ16_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Summ16_get(swigCPtr);
      return ret;
    } 
  }

  public int SummFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SummFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SummFont_get(swigCPtr);
      return ret;
    } 
  }

  public int SummOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SummOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SummOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int SummStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SummStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SummStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int SummSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SummSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SummSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int SwapBytesMode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SwapBytesMode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SwapBytesMode_get(swigCPtr);
      return ret;
    } 
  }

  public int SyncTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SyncTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SyncTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int SysAdminPassword {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SysAdminPassword_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_SysAdminPassword_get(swigCPtr);
      return ret;
    } 
  }

  public string TableName {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TableName_get(swigCPtr);
      return ret;
    } 
  }

  public int TableNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TableNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TableNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string TagDescription {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagDescription_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TagDescription_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int TagID {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagID_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TagID_get(swigCPtr);
      return ret;
    } 
  }

  public int TagType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TagType_get(swigCPtr);
      return ret;
    } 
  }

  public int TagNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TagNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string TagValueBin {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagValueBin_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TagValueBin_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public long TagValueDateTime {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagValueDateTime_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TagValueDateTime_get(swigCPtr);
      return ret;
    } 
  }

  public long TagValueFVLN {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagValueFVLN_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TagValueFVLN_get(swigCPtr);
      return ret;
    } 
  }

  public int TagValueLength {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagValueLength_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TagValueLength_get(swigCPtr);
      return ret;
    } 
  }

  public int TagValueInt {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagValueInt_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TagValueInt_get(swigCPtr);
      return ret;
    } 
  }

  public string TagValueStr {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TagValueStr_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TagValueStr_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public long TaxValue1 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue1_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue1_get(swigCPtr);
      return ret;
    } 
  }

  public long TaxValue2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue2_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue2_get(swigCPtr);
      return ret;
    } 
  }

  public long TaxValue3 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue3_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue3_get(swigCPtr);
      return ret;
    } 
  }

  public long TaxValue4 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue4_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue4_get(swigCPtr);
      return ret;
    } 
  }

  public long TaxValue5 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue5_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue5_get(swigCPtr);
      return ret;
    } 
  }

  public long TaxValue6 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue6_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue6_get(swigCPtr);
      return ret;
    } 
  }

  public int TaxValue1Enabled {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxValue1Enabled_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxValue1Enabled_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1NameSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1NameSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1NameSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1RateFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1RateFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1RateFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1RateOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1RateOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1RateOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1RateSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1RateSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1RateSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1SumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1SumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1SumStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1SumSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1SumSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1TurnOverOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1TurnOverOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1TurnOverOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax1TurnOverStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax1TurnOverStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax1TurnOverStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2NameSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2NameSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2NameSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2RateFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2RateFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2RateFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2RateOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2RateOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2RateOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2RateSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2RateSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2RateSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2SumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2SumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2SumStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2SumSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2SumSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2TurnOverOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2TurnOverOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2TurnOverOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2TurnOverStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2TurnOverStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2TurnOverStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax2TurnOverSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax2TurnOverSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax2TurnOverSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3NameSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3NameSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3NameSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3RateFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3RateFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3RateFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3RateOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3RateOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3RateOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3RateSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3RateSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3RateSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3SumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3SumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3SumStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3SumSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3SumSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3TurnOverOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3TurnOverOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3TurnOverOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3TurnOverStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3TurnOverStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3TurnOverStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax3TurnOverSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax3TurnOverSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax3TurnOverSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4NameFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4NameFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4NameFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4NameOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4NameOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4NameOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4NameSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4NameSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4NameSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4RateFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4RateFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4RateFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4RateOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4RateOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4RateOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4RateSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4RateSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4RateSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4SumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4SumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4SumStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4SumSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4SumSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4TurnOverOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4TurnOverOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4TurnOverOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4TurnOverStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4TurnOverStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4TurnOverStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int Tax4TurnOverSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Tax4TurnOverSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Tax4TurnOverSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int TaxType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TaxType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TaxType_get(swigCPtr);
      return ret;
    } 
  }

  public int TCPConnectionTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TCPConnectionTimeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TCPConnectionTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public int TCPPort {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TCPPort_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TCPPort_get(swigCPtr);
      return ret;
    } 
  }

  public string TextBlock {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TextBlock_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TextBlock_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int TextBlockNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TextBlockNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TextBlockNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int TextFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TextFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TextFont_get(swigCPtr);
      return ret;
    } 
  }

  public int TextOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TextOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TextOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int TextStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TextStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TextStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int TextSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TextSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TextSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public long Time {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Time_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Time_get(swigCPtr);
      return ret;
    } 
  }

  public long Time2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Time2_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_Time2_get(swigCPtr);
      return ret;
    } 
  }

  public int Timeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Timeout_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_Timeout_get(swigCPtr);
      return ret;
    } 
  }

  public int TimeoutsUsing {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TimeoutsUsing_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TimeoutsUsing_get(swigCPtr);
      return ret;
    } 
  }

  public string TimeStr {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TimeStr_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TimeStr_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public BytesVector TLVData {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TLVData_set(swigCPtr, BytesVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = classic_fr_drv_ngPINVOKE.classic_interface_TLVData_get(swigCPtr);
      BytesVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new BytesVector(cPtr, true);
      return ret;
    } 
  }

  public string TLVDataHex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TLVDataHex_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TLVDataHex_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public string Token {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Token_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_Token_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int TotalFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TotalFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TotalFont_get(swigCPtr);
      return ret;
    } 
  }

  public int TotalOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TotalOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TotalOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int TotalStringNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TotalStringNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TotalStringNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int TotalSumFont {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TotalSumFont_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TotalSumFont_get(swigCPtr);
      return ret;
    } 
  }

  public int TotalSumOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TotalSumOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TotalSumOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int TotalSymbolNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TotalSymbolNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TotalSymbolNumber_get(swigCPtr);
      return ret;
    } 
  }

  public string TransferBytes {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TransferBytes_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_TransferBytes_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool TranslationEnabled {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TranslationEnabled_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_TranslationEnabled_get(swigCPtr);
      return ret;
    } 
  }

  public int TransmitDocumentNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TransmitDocumentNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int TransmitQueueSize {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TransmitQueueSize_get(swigCPtr);
      return ret;
    } 
  }

  public int TransmitSessionNumber {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TransmitSessionNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int TransmitStatus {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TransmitStatus_get(swigCPtr);
      return ret;
    } 
  }

  public bool TypeOfLastEntryFM {
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_TypeOfLastEntryFM_get(swigCPtr);
      return ret;
    } 
  }

  public int TypeOfLastEntryFMEx {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_TypeOfLastEntryFMEx_get(swigCPtr);
      return ret;
    } 
  }

  public bool TypeOfSumOfEntriesFM {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_TypeOfSumOfEntriesFM_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_TypeOfSumOfEntriesFM_get(swigCPtr);
      return ret;
    } 
  }

  public int UCodePage {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_UCodePage_get(swigCPtr);
      return ret;
    } 
  }

  public string UCodePageText {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_UCodePageText_get(swigCPtr);
      return ret;
    } 
  }

  public string UDescription {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_UDescription_get(swigCPtr);
      return ret;
    } 
  }

  public int UMajorProtocolVersion {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_UMajorProtocolVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int UMajorType {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_UMajorType_get(swigCPtr);
      return ret;
    } 
  }

  public int UMinorProtocolVersion {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_UMinorProtocolVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int UMinorType {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_UMinorType_get(swigCPtr);
      return ret;
    } 
  }

  public int UModel {
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_UModel_get(swigCPtr);
      return ret;
    } 
  }

  public string URL {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_URL_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_URL_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool UseCommandTimeout {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseCommandTimeout_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseCommandTimeout_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseIPAddress {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseIPAddress_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseIPAddress_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseJournalRibbon {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseJournalRibbon_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseJournalRibbon_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseReceiptRibbon {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseReceiptRibbon_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseReceiptRibbon_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseSlipCheck {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseSlipCheck_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseSlipCheck_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseSlipDocument {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseSlipDocument_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseSlipDocument_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseTaxDiscountBel {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseTaxDiscountBel_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseTaxDiscountBel_get(swigCPtr);
      return ret;
    } 
  }

  public bool UseWareCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_UseWareCode_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_UseWareCode_get(swigCPtr);
      return ret;
    } 
  }

  public int ValueOfFieldInteger {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFieldInteger_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFieldInteger_get(swigCPtr);
      return ret;
    } 
  }

  public string ValueOfFieldString {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFieldString_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFieldString_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int VertScale {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_VertScale_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_VertScale_get(swigCPtr);
      return ret;
    } 
  }

  public int WaitForPrintingDelay {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_WaitForPrintingDelay_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_WaitForPrintingDelay_get(swigCPtr);
      return ret;
    } 
  }

  public int WareCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_WareCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_WareCode_get(swigCPtr);
      return ret;
    } 
  }

  public bool SkipPrint {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_SkipPrint_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_SkipPrint_get(swigCPtr);
      return ret;
    } 
  }

  public string DigitalSign {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DigitalSign_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_DigitalSign_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int DeviceFunctionNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DeviceFunctionNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DeviceFunctionNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int ValueOfFunctionInteger {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFunctionInteger_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFunctionInteger_get(swigCPtr);
      return ret;
    } 
  }

  public string ValueOfFunctionString {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFunctionString_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_ValueOfFunctionString_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public bool EnableCashcoreMarkCompatibility {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_EnableCashcoreMarkCompatibility_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_EnableCashcoreMarkCompatibility_get(swigCPtr);
      return ret;
    } 
  }

  public int MarkingType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MarkingType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MarkingType_get(swigCPtr);
      return ret;
    } 
  }

  public int MarkingTypeEx {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MarkingTypeEx_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MarkingTypeEx_get(swigCPtr);
      return ret;
    } 
  }

  public int DataBlockSize {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DataBlockSize_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DataBlockSize_get(swigCPtr);
      return ret;
    } 
  }

  public long MessageNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MessageNumber_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_MessageNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int CheckItemLocalError {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckItemLocalError_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckItemLocalError_get(swigCPtr);
      return ret;
    } 
  }

  public int MeasureUnit {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MeasureUnit_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MeasureUnit_get(swigCPtr);
      return ret;
    } 
  }

  public bool DivisionalQuantity {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DivisionalQuantity_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_DivisionalQuantity_get(swigCPtr);
      return ret;
    } 
  }

  public ulong Numerator {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Numerator_set(swigCPtr, value);
    } 
    get {
      ulong ret = classic_fr_drv_ngPINVOKE.classic_interface_Numerator_get(swigCPtr);
      return ret;
    } 
  }

  public ulong Denominator {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_Denominator_set(swigCPtr, value);
    } 
    get {
      ulong ret = classic_fr_drv_ngPINVOKE.classic_interface_Denominator_get(swigCPtr);
      return ret;
    } 
  }

  public int FreeMemorySize {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FreeMemorySize_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FreeMemorySize_get(swigCPtr);
      return ret;
    } 
  }

  public int MCCheckStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MCCheckStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MCCheckStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int MCNotificationStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MCNotificationStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MCNotificationStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int MCCommandFlags {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MCCommandFlags_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MCCommandFlags_get(swigCPtr);
      return ret;
    } 
  }

  public int MCCheckResultSavedCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MCCheckResultSavedCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MCCheckResultSavedCount_get(swigCPtr);
      return ret;
    } 
  }

  public int MCRealizationCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MCRealizationCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MCRealizationCount_get(swigCPtr);
      return ret;
    } 
  }

  public int MCStorageSize {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MCStorageSize_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MCStorageSize_get(swigCPtr);
      return ret;
    } 
  }

  public ulong CheckSum {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckSum_set(swigCPtr, value);
    } 
    get {
      ulong ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckSum_get(swigCPtr);
      return ret;
    } 
  }

  public int NotificationCount {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_NotificationCount_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_NotificationCount_get(swigCPtr);
      return ret;
    } 
  }

  public long NotificationNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_NotificationNumber_set(swigCPtr, value);
    } 
    get {
      long ret = classic_fr_drv_ngPINVOKE.classic_interface_NotificationNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int NotificationSize {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_NotificationSize_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_NotificationSize_get(swigCPtr);
      return ret;
    } 
  }

  public int DataOffset {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_DataOffset_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_DataOffset_get(swigCPtr);
      return ret;
    } 
  }

  public int MarkingType2 {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MarkingType2_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_MarkingType2_get(swigCPtr);
      return ret;
    } 
  }

  public BytesVector RandomSequence {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RandomSequence_set(swigCPtr, BytesVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = classic_fr_drv_ngPINVOKE.classic_interface_RandomSequence_get(swigCPtr);
      BytesVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new BytesVector(cPtr, true);
      return ret;
    } 
  }

  public string RandomSequenceHex {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_RandomSequenceHex_set(swigCPtr, value);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_RandomSequenceHex_get(swigCPtr);
      if (classic_fr_drv_ngPINVOKE.SWIGPendingException.Pending) throw classic_fr_drv_ngPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public BytesVector AuthData {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_AuthData_set(swigCPtr, BytesVector.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = classic_fr_drv_ngPINVOKE.classic_interface_AuthData_get(swigCPtr);
      BytesVector ret = (cPtr == global::System.IntPtr.Zero) ? null : new BytesVector(cPtr, true);
      return ret;
    } 
  }

  public int ItemStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_ItemStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_ItemStatus_get(swigCPtr);
      return ret;
    } 
  }

  public int CheckItemMode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckItemMode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckItemMode_get(swigCPtr);
      return ret;
    } 
  }

  public int CheckItemLocalResult {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_CheckItemLocalResult_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_CheckItemLocalResult_get(swigCPtr);
      return ret;
    } 
  }

  public int KMServerErrorCode {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KMServerErrorCode_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_KMServerErrorCode_get(swigCPtr);
      return ret;
    } 
  }

  public int KMServerCheckingStatus {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_KMServerCheckingStatus_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_KMServerCheckingStatus_get(swigCPtr);
      return ret;
    } 
  }

  public string LoaderVersion {
    get {
      string ret = classic_fr_drv_ngPINVOKE.classic_interface_LoaderVersion_get(swigCPtr);
      return ret;
    } 
  }

  public int LastDocumentNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_LastDocumentNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_LastDocumentNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int FirstDocumentNumber {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FirstDocumentNumber_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FirstDocumentNumber_get(swigCPtr);
      return ret;
    } 
  }

  public int FNArchiveType {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_FNArchiveType_set(swigCPtr, value);
    } 
    get {
      int ret = classic_fr_drv_ngPINVOKE.classic_interface_FNArchiveType_get(swigCPtr);
      return ret;
    } 
  }

  public bool MarkingOnly {
    set {
      classic_fr_drv_ngPINVOKE.classic_interface_MarkingOnly_set(swigCPtr, value);
    } 
    get {
      bool ret = classic_fr_drv_ngPINVOKE.classic_interface_MarkingOnly_get(swigCPtr);
      return ret;
    } 
  }

  public enum TBarcodeAlignment {
    baCenter = 0,
    baLeft = 1,
    baRight = 2
  }

  public enum TFinishDocumentMode {
    fdmTrailerDisabled = 0,
    fdmTrailerEnabled = 1
  }

  public enum TBinaryConversion {
    BINARY_CONVERSION_NONE = 0,
    BINARY_CONVERSION_HEX = 1
  }

  public enum TCodePage {
    CODE_PAGE_DEFAULT = 0,
    CODE_PAGE_RUSSIAN = 1,
    CODE_PAGE_ARMENIAN_UNICODE = 2,
    CODE_PAGE_ARMENIAN_ANSI = 3,
    CODE_PAGE_KAZAKH_UNICODE = 4,
    CODE_PAGE_TURKMEN_UNICODE = 5
  }

  public enum TConnectionType {
    Local = 0,
    ServerTcp = 1,
    ServerDCOM = 2,
    ESCAPE = 3,
    NotUsed = 4,
    Emulator = 5,
    Tcp = 6
  }

  public enum BarcodeTextPosition {
    BCT_None = 0,
    BCT_Below = 1,
    BCT_Above = 2,
    BCT_Both = 3
  }

  public enum BarcodeLineType {
    BC1D_Code128A,
    BC1D_Code128B,
    BC1D_Code128C,
    BC1D_ReservedForQR,
    BC1D_Code39,
    BC1D_EAN13
  }

  public enum Barcode2DType {
    BC2D_PDF417,
    BC2D_DATAMATRIX,
    BC2D_AZTEC,
    BC2D_QRCODE
  }

  public enum DevicePropertiesEnumeration {
    DPE_f00_journal_weight_sensor = 0,
    DPE_f01_receipt_weight_sensor,
    DPE_f02_journal_opt_sensor,
    DPE_f03_receipt_opt_sensor,
    DPE_f04_cover_sensor,
    DPE_f05_journal_lever,
    DPE_f06_receipt_lever,
    DPE_f07_hi_slip_sensor,
    DPE_f08_low_slip_sensor,
    DPE_f09_presenter,
    DPE_f10_presenter_commands,
    DPE_f11_ej_overflow_flag,
    DPE_f12_ej,
    DPE_f13_cutter,
    DPE_f14_drawer_status_as_presenter_paper_sensor,
    DPE_f15_drawer_sensor,
    DPE_f16_presenter_in_paper_sensor,
    DPE_f17_presenter_out_paper_sensor,
    DPE_f18_bill_acceptor,
    DPE_f19_tax_keyboard,
    DPE_f20_journal,
    DPE_f21_slip,
    DPE_f22_non_fiscal_doc_commands,
    DPE_f23_cashcore,
    DPE_f24_inn_leading_zeros,
    DPE_f25_rnm_leading_zeros,
    DPE_f26_line_printing_bytes_swapping,
    DPE_f27_wrong_tax_password_blocking,
    DPE_f28_alt_protocol,
    DPE_f29_string_printing_commands_wrap_strings_by_n,
    DPE_f30_string_printing_commands_wrap_strings_by_font,
    DPE_f31_fisc_commands_wrap_strings_by_n,
    DPE_f32_fisc_commands_wrap_strings_by_font,
    DPE_f33_senior_cashier,
    DPE_f34_slip_receipt_bit3,
    DPE_f35_block_graphic_loading,
    DPE_f36_error_description_command,
    DPE_f37_print_flags_for_print_ext_graphics_print_line,
    DPE_f38_skno,
    DPE_f39_mfp,
    DPE_f40_ej5,
    DPE_f41_print_scaled_graphics,
    DPE_f42_print_ext_graphics_512,
    DPE_f43_fs,
    DPE_f44_eod,
    DPE_f45_tag_autoprint_support,
    DPE_f46_qr_in_footer_support,
    DPE_f47_fs_1_1_support,
    DPE_f48_correction_new_support,
    DPE_f49_error_description_command_extended,
    DPE_f50_fd_answers_extended,
    DPE_f51_fd_authorization_req,
    DPE_f52_plain_protocolv1_transfer,
    DPE_f53_blocking_mode_available,
    DPE_reserved,
    DPE_Font1Width = 64,
    DPE_Font2Width,
    DPE_FirstDrawLine,
    DPE_InnDigitCount,
    DPE_RnmDigitCount,
    DPE_LongRnmDigitCount,
    DPE_LongSerialDigitCount,
    DPE_DefaultTaxPassword,
    DPE_DefaultAdminPassword,
    DPE_BluetoothTableNumber,
    DPE_TaxFieldNumber,
    DPE_MaxCmdLength,
    DPE_MaxDrawLineWidth,
    DPE_MaxDrawLineWidth512,
    DPE_MaxDrawLineCount512,
    DPE_FsTableNumber,
    DPE_OfdTableNmb,
    DPE_EmbeddedTableNumber,
    DPE_FFDVersionTableNumber,
    DPE_FFDVersionFieldNumber
  }

  public enum ESwapBytesMode {
    SBM_Swap = 0,
    SBM_NoSwap = 1,
    SBM_Prop = 2,
    SBM_Model = 3
  }

  public enum PrinterMode {
    PM_UnknownMode = 0x0,
    PM_DumpMode = 0x01,
    PM_SessionOpen = 0x02,
    PM_SessionOpenOver24h = 0x03,
    PM_SessionClosed = 0x04,
    PM_TaxmanPasswordError = 0x05,
    PM_DateConfirmWaiting = 0x06,
    PM_PointModificationAllowed = 0x07,
    PM_OpenedDocument = 0x08,
    PM_TechnologicalResetAllowed = 0x09,
    PM_TestRun = 0x0A,
    PM_FullFiscalReportInProgress = 0x0B,
    PM_CryptoJournalReportInProgress = 0x0C,
    PM_FiscalSlipMode = 0x0D,
    PM_SlipPrintingInProgress = 0x0E,
    PM_FiscalSlipIsReady = 0x0F,
    PM_OpenedDocumentBuy = 0x18,
    PM_OpenedSlipDocumentBuy = 0x1D,
    PM_LoadingAndPositioningSlip = 0x1E,
    PM_OpenedDocumentSaleReturn = 0x28,
    PM_OpenedSlipDocumentSaleReturn = 0x2D,
    PM_PositioningSlip = 0x2E,
    PM_OpenedDocumentBuyReturn = 0x38,
    PM_OpenedSlipDocumentBuyReturn = 0x3D,
    PM_PrintingSlip = 0x3E,
    PM_OpenedDocumentNonFiscal = 0x48,
    PM_SlipPrinted = 0x4C,
    PM_DocumentPrinted = 0x4E,
    PM_EjectingSlip = 0x5E,
    PM_WaitingSlipRemoval = 0x6E
  }

  public enum PrinterSubmode {
    PSM_PaperPresent = 0,
    PSM_PassivePaperAbsense = 1,
    PSM_ActivePaperAbsense = 2,
    PSM_AfterAvtivePaperAbsense = 3,
    PSM_ReportPrintingInProgress = 4,
    PSM_OperationPrintingInProgress = 5
  }

  public enum DeviceFunctionEnumeration {
    DFE_SkipAllPrinting = 0,
    DFE_AutoReadDetailedErrorDescription = 1,
    DFE_DataPresentation = 2,
    DFE_PlainTransfer = 3,
    DFE_BlockingMode = 4
  }

  public enum DataPresentationFormat {
    DPF_ClassicText = 0,
    DPF_ClassicJson = 1
  }

  public enum TagTypeEnumeration {
    TT_Byte = 0,
    TT_Uint16 = 1,
    TT_Uint32 = 2,
    TT_VLN = 3,
    TT_FVLN = 4,
    TT_BitMask = 5,
    TT_UnixTime = 6,
    TT_String = 7,
    TT_STLV = 8,
    TT_ByteArray = 9
  }

  public enum MeasurementUnitEnumeration {
    MU_Item = 0,
    MU_Gram = 10,
    MU_Kilogram = 11,
    MU_Ton = 12,
    MU_Centimeter = 20,
    MU_Decimeter = 21,
    MU_Meter = 22,
    MU_SquareCentimeter = 30,
    MU_SquareDecimeter = 31,
    MU_SquareMeter = 32,
    MU_Milliliter = 40,
    MU_Liter = 41,
    MU_CubicMeter = 42,
    MU_KilowattHour = 50,
    MU_Gigacalorie = 51,
    MU_Day = 70,
    MU_Hour = 71,
    MU_Minute = 72,
    MU_Second = 73,
    MU_Kilobyte = 80,
    MU_Megabyte = 81,
    MU_Gigabyte = 82,
    MU_Terabyte = 83,
    MU_Other = 255
  }

}

}
